

#include<iostream>
#include<stdlib.h>
#include<fstream>
#include<string>


using namespace std;

void astroensigno(string);
void aspectos();
void basicos();


//variables
string ascendente,sol_ensigno,sol_encasa,luna_ensigno,luna_encasa,medio_cielo,nodo_norteensigno,nodo_norteencasa,nodo_surensigno,nodo_surencasa,mercurio_ensigno,nakshatra,mercurio_encasa,venus_ensigno,hemisferios;
string venus_encasa,marte_ensigno,marte_encasa,jupiter_ensigno,jupiter_encasa,saturno_ensigno,saturno_encasa, parte_delafortuna,parte_delinfortunio,urano_ensigno,urano_encasa,neptuno_ensigno,neptuno_encasa,mercurio_retrogradotransito,introduccion,indice;
string pluton_ensigno,pluton_encasa,lilith_ensigno,lilith_encasa,quiron_ensigno,quiron_encasa,ceres_ensigno,ceres_encasa,palas_ensigno,palas_encasa,juno_ensigno,juno_encasa,vesta_ensigno,vesta_encasa;
string sol_aspectos,luna_aspectos,mercurio_aspectos,venus_aspectos,marte_aspectos,jupiter_aspectos,saturno_aspectos,urano_aspectos,neptuno_aspectos,pluton_aspectos,informe_predictivo,fuentes;
string salto="\n\n\n\n";
string aspecto,aspecto_txt;
string astro,astro_txt;
string texto;
string signosdatos, aspectosdatos;
string txt = ".txt";
string descripcion;
int main() {
	ofstream carta_astral;
basicos();
     texto=texto+""+introduccion;texto=texto+""+salto;texto=texto+""+indice;texto=texto+""+salto;texto=texto+""+salto;texto=texto+"Capitulo 1: Su perspectiva ante la vida y como lo ven los demás:\n\n"+ascendente;texto=texto+""+salto;
		cout << "\nPor favor escriba el signo donde se encuentra el ascendente, ejm: \n\n   'ascendente en acuario' (virgo,cancer......,etc.),0=exit\n\n";
	getline(cin,astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+salto;texto=texto+"Capitulo 2: Sus posibilidades sociales y de crecimiento profesional:\n\n"+medio_cielo;texto=texto+""+salto;
	cout << "\nPor favor escriba el signo donde se encuentra el Medio Cielo, ejm: \n\n  'medio cielo en escorpio' (virgo,cancer......,etc.),0=exit\n\n";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+salto;texto=texto+"Capitulo 3: Su yo intimo:su verdadera Motivación:\n\n\n"+sol_ensigno;texto=texto+""+salto;
	cout << "\nPor favor escriba el signo solar:     \n\n ejm: sol en virgo (leo, cancer.... ,etc.)0=exit \n\n   ";
	getline(cin, astro); astroensigno(astro);
system("CLS");texto=texto+""+salto;texto=texto+""+sol_encasa;texto=texto+""+salto;
	cout << "\nPor favor escriba la casa en que se encontraba el sol al momento de nacer:     \n\n ejm: sol en casa 1 (2,3...... ,etc.)0=exit\n\n   ";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+sol_aspectos;texto=texto+""+salto;
	cout << "\nPor favor rellene los aspectos del sol ejm: \nsol conjuncion luna (trigono, sextil.....,etc.)\n  o presione la tecla '0' para pasar a otro guion\n\n ";
	aspectos();
	system("CLS");texto=texto+""+salto;texto=texto+""+salto;texto=texto+"Capitulo 4: Emociones, Apegos, Sentimientos:\n\n\n"+luna_ensigno;texto=texto+""+salto;
	cout << "\nPor favor escriba la ubicacion de la luna en el signo al momento de nacer:     \n\n ejm: luna en virgo (leo, cancer.... ,etc.)0=exit \n\n   ";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+luna_encasa;texto=texto+""+salto;
	cout << "\nPor favor escriba la casa en que se encontraba la luna al momento de nacer:     \n ejm: luna en casa 1 (2,3...... ,etc.)0=exit\n\n   ";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+luna_aspectos;texto=texto+""+salto;
	cout << "\nPor favor rellene los aspectos de la luna ejm: \nluna conjuncion mercurio (trigono, sextil.....,etc.)\n  o presione la tecla '0' para pasar a otro guion\n\n ";
	aspectos();
	system("CLS");texto=texto+""+salto;texto=texto+""+salto;texto=texto+"Capitulo 5: Intereses y Habilidades Mentales:\n\n\n"+mercurio_ensigno;texto=texto+""+salto;
	cout << "\nPor favor escriba la ubicacion de mercurio en el signo al momento de nacer:     \n ejm: mercurio en virgo (leo, cancer.... ,etc.)0=exit \n\n   ";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+mercurio_encasa;texto=texto+""+salto;
	cout << "\nPor favor escriba la casa en que se encontraba mercurio al momento de nacer:     \n ejm: mercurio en casa 1 (2,3...... ,etc.)0=exit\n\n   ";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+mercurio_aspectos;texto=texto+""+salto;
	cout << "\nPor favor rellene los aspectos de mercurio ejm: \nmercurio conjuncion venus (trigono, sextil.....,etc.)\n  o presione la tecla '0' para pasar a otro guion\n\n ";
	aspectos();
	system("CLS");texto=texto+""+salto;texto=texto+""+salto;texto=texto+"Capitulo 6: Áreas que usted disfruta:\n\n\n"+venus_ensigno;texto=texto+""+salto;
	cout << "\nPor favor escriba la ubicacion de venus en el signo al momento de nacer:     \n ejm: venus en virgo (leo, cancer.... ,etc.)0=exit \n\n   ";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+venus_encasa;texto=texto+""+salto;
	cout << "\nPor favor escriba la casa en que se encontraba venus al momento de nacer:     \n ejm: venus en casa 1 (2,3...... ,etc.)0=exit\n\n   ";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+venus_aspectos;texto=texto+""+salto;
	cout << "\nPor favor rellene los aspectos de venus ejm: \n\nvenus conjuncion marte (trigono, sextil.....,etc.)\n  o presione la tecla '0' para pasar a otro guion\n\n ";
	aspectos();
	system("CLS");texto=texto+""+salto;texto=texto+""+salto;texto=texto+"Capitulo 7: Su disposición a la acción:\n\n\n"+marte_ensigno;texto=texto+""+salto;
	cout << "\nPor favor escriba la ubicacion de marte en el signo al momento de nacer:     \n ejm: marte en virgo (leo, cancer.... ,etc.)0=exit \n\n   ";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+marte_encasa;texto=texto+""+salto;
	cout << "\nPor favor escriba la casa en que se encontraba marte al momento de nacer:     \n ejm: marte en casa 1 (2,3...... ,etc.)0=exit\n\n   ";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+marte_aspectos;texto=texto+""+salto;
	cout << "\nPor favor rellene los aspecto de marte ejm: \nmarte conjuncion jupiter (trigono, sextil.....,etc.)\n  o presione la tecla '0' para pasar a otro guion\n\n ";
	aspectos();
	system("CLS");texto=texto+""+salto;texto=texto+""+salto;texto=texto+"Capitulo 8: Áreas que le producen crecimiento y Expansión:\n\n\n"+jupiter_ensigno;texto=texto+""+salto;
	cout << "\nPor favor escriba la ubicacion de jupiter en el signo al momento de nacer:     \n ejm: jupiter en virgo (leo, cancer.... ,etc.)0=exit \n\n   ";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+jupiter_encasa;texto=texto+""+salto;
	cout << "\nPor favor escriba la casa en que se encontraba jupiter al momento de nacer:     \n ejm: jupiter en casa 1 (2,3...... ,etc.)0=exit\n\n   ";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+jupiter_aspectos;texto=texto+""+salto;
	cout << "\nPor favor rellene los aspectos de jupiter ejm: \njupiter conjuncion saturno (trigono, sextil.....,etc.)\n  o presione la tecla '0' para pasar a otro guion\n\n ";
	aspectos();
	system("CLS");texto=texto+""+salto;texto=texto+""+salto;texto=texto+"Capitulo 9: Áreas que son un desafío para usted:\n\n\n"+saturno_ensigno;texto=texto+""+salto;
	cout << "\nPor favor escriba la ubicacion de saturno en el signo al momento de nacer:     \n ejm: saturno en virgo (leo, cancer.... ,etc.)0=exit \n\n   ";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+saturno_encasa;texto=texto+""+salto;
	cout << "\nPor favor escriba la casa en que se encontraba saturno al momento de nacer:     \n ejm: saturno en casa 1 (2,3...... ,etc.)0=exit\n\n   ";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+saturno_aspectos;texto=texto+""+salto;
	cout << "\nPor favor rellene los aspectos de saturno ejm: \nsaturno conjuncion urano (trigono, sextil.....,etc.)\n  o presione la tecla '0' para pasar a otro guion\n\n ";
	aspectos();
	system("CLS");texto=texto+""+salto;texto=texto+""+salto;texto=texto+"Capitulo 10: Influencias generacionales:\n\n\n"+urano_ensigno;texto=texto+""+salto;
	cout << "\nPor favor escriba la ubicacion de urano en el signo al momento de nacer:     \n ejm: urano en virgo (leo, cancer.... ,etc.)0=exit \n\n   ";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+urano_encasa;texto=texto+""+salto;
	cout << "\nPor favor escriba la casa en que se encontraba urano al momento de nacer:     \n ejm: urano en casa 1 (2,3...... ,etc.)0=exit\n\n   ";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+urano_aspectos;texto=texto+""+salto;
	cout << "\nPor favor rellene los aspectos de urano ejm: \nurano conjuncion pluton (trigono, sextil.....,etc.)\n  o presione la tecla '0' para pasar a otro guion\n\n ";
	aspectos();
	system("CLS");texto=texto+""+salto;texto=texto+""+neptuno_ensigno;texto=texto+""+salto;
	cout << "\nPor favor escriba la ubicacion de neptuno en el signo al momento de nacer:     \n ejm: neptuno en virgo (leo, cancer.... ,etc.)0=exit \n\n   ";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+neptuno_encasa;texto=texto+""+salto;
	cout << "\nPor favor escriba la casa en que se encontraba neptuno al momento de nacer:     \n ejm: neptuno en casa 1 (2,3...... ,etc.)0=exit\n\n   ";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+neptuno_aspectos;texto=texto+""+salto;
	cout << "\nPor favor rellene los aspectos de neptuno ejm: \nneptuno conjuncion lilith (trigono, sextil.....,etc.)\n  o presione la tecla '0' para pasar a otro guion\n\n ";
	aspectos();
	system("CLS");texto=texto+""+salto;texto=texto+""+pluton_ensigno;texto=texto+""+salto;
	cout << "\nPor favor escriba la ubicacion de pluton en el signo al momento de nacer:     \n ejm: pluton en virgo (leo, cancer.... ,etc.)0=exit \n\n   ";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+pluton_encasa;texto=texto+""+salto;
	cout << "\nPor favor escriba la casa en que se encontraba pluton al momento de nacer:     \n ejm: pluton en casa 1 (2,3...... ,etc.)0=exit\n\n   ";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+pluton_aspectos;texto=texto+""+salto;
	cout << "\nPor favor rellene los aspectos de pluton ejm: \npluton conjuncion ceres (trigono, sextil.....,etc.)\n  o presione la tecla '0' para pasar a otro guion\n\n ";
	aspectos();
	system("CLS");texto=texto+""+salto;texto=texto+""+salto;texto=texto+"Capitulo 11: Su lado Oscuro:\n\n\n"+lilith_ensigno;texto=texto+""+salto;
	cout << "\nPor favor escriba la ubicacion de lilith en el momento de nacer:     \n\n ejm: lilith en virgo (leo, cancer.... ,etc.)0=exit \n\n   ";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+lilith_encasa;texto=texto+""+salto;
	cout << "\nPor favor escriba la casa en que se encontraba lilith al momento de nacer:     \n ejm: Lilith en casa 1 (2,3...... ,etc.)0=exit\n\n   ";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+salto;texto=texto+"Capitulo 12: La herida más profunda:\n\n\n"+quiron_ensigno;texto=texto+""+salto;
	cout << "\nPor favor escriba la ubicacion de quiron en el signo al momento de nacer:     \n ejm: quiron en virgo (leo, cancer.... ,etc.)0=exit \n\n   ";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+quiron_encasa;texto=texto+""+salto;
	cout << "\nPor favor escriba la casa en que se encontraba quiron al momento de nacer:     \n ejm: quiron en casa 1 (2,3...... ,etc.)0=exit\n\n   ";
	getline(cin, astro); astroensigno(astro);
system("CLS");texto=texto+""+salto;
	cout << "\nPor favor rellene los aspectos de Quiron si los hay ejm: \nquiron conjuncion ascendente (o medio cielo)\n  o presione la tecla '0' para pasar a otro guion\n\n ";
	aspectos();
	system("CLS");texto=texto+""+salto;texto=texto+""+salto;texto=texto+"Capitulo 13: Los asteroides Ceres, Palas, Juno y Vesta:\n\n\n"+ceres_ensigno;texto=texto+""+salto;
	cout<<"Por favor escriba la ubicacion de ceres en el signo al momento de nacer:     \n\n ejm: ceres en virgo (leo, cancer.... ,etc.)0=exit \n\n   ";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+ceres_encasa;texto=texto+""+salto;
	cout << "\nPor favor escriba la casa en que se encontraba ceres al momento de nacer:     \n ejm: ceres en casa 1 (2,3...... ,etc.)0=exit\n\n   ";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+palas_ensigno;texto=texto+""+salto;
	cout << "\nPor favor escriba la ubicacion de palas en el signo al momento de nacer:     \n ejm: palas en virgo (leo, cancer.... ,etc.)0=exit \n\n   ";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+palas_encasa;texto=texto+""+salto;
	cout << "\nPor favor escriba la casa en que se encontraba palas al momento de nacer:     \n ejm: palas en casa 1 (2,3...... ,etc.)0=exit\n\n   ";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+juno_ensigno;texto=texto+""+salto;
	cout << "\nPor favor escriba la ubicacion de juno en el signo al momento de nacer:     \n ejm: juno en virgo (leo, cancer.... ,etc.)0=exit \n\n   ";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+juno_encasa;texto=texto+""+salto;
	cout << "\nPor favor escriba la casa en que se encontraba juno al momento de nacer:     \n ejm: juno en casa 1 (2,3...... ,etc.)0=exit\n\n   ";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+vesta_ensigno;texto=texto+""+salto;
    cout << "\nPor favor escriba la ubicacion de vesta en el signo al momento de nacer:     \n ejm: vesta en virgo (leo, cancer.... ,etc.)0=exit \n\n   ";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+vesta_encasa;texto=texto+""+salto;
	cout << "\nPor favor escriba la casa en que se encontraba vesta al momento de nacer:     \n ejm: vesta en casa 1 (2,3...... ,etc.)0=exit\n\n   ";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+salto;texto=texto+"Capitulo 14: La ruta debe tomar su alma para evolucionar:\n\n\n"+nodo_norteensigno;texto=texto+""+salto;
	cout << "\nPor favor escriba el signo donde se encuentra el nodo norte, ejm: \n\n  'nodo norte en capricornio' (virgo,cancer......,etc.)0=exit\n\n";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+nodo_norteencasa;texto=texto+""+salto;
cout << "\nPor favor escriba la casa donde se encuentra el nodo norte, ejm: \n\n  'nodo norte en casa 7' (7,8,9......,etc.)0=exit\n\n";
	getline(cin, astro); astroensigno(astro);
system("CLS");texto=texto+""+salto;texto=texto+""+salto;
	cout << "\nPor favor rellene los aspectos de los nodos ejm: \nnodo norte conjuncion ascendente (trigono, sextil.....,etc.)\n  o presione la tecla '0' para pasar a otro guion\n\n ";
	aspectos();
	system("CLS");texto=texto+""+salto;texto=texto+""+salto;texto=texto+"Capitulo 15: Parte de la fortuna, áreas donde es más feliz:\n\n\n"+parte_delafortuna;texto=texto+""+salto;
	cout << "\nPor favor escriba la ubicacion del signo del parte de la fortuna en el signo al momento de nacer:     \n\n ejm: fortuna en virgo (leo, cancer.... ,etc.)0=exit \n\n   ";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+salto;
	cout << "\nPor favor escriba la ubicacion de la casa del parte de la fortuna en el signo al momento de nacer:     \n\n ejm: fortuna en casa 1 (2,3.... ,etc.)0=exit \n\n   ";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+parte_delinfortunio;texto=texto+""+salto;
	cout << "\nPor favor escriba la ubicacion del signo en el parte del infortunio al momento de nacer:     \nejm: infortunio en virgo (leo, cancer.... ,etc.)0=exit \n\n   ";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;texto=texto+""+salto;
	cout << "\nPor favor escriba la ubicacion de la casa del parte del infortunio:     \nejm: infortunio en casa 1 (2,3.... ,etc.)0=exit \n\n   ";
	getline(cin, astro); astroensigno(astro);
system("CLS");texto=texto+""+salto;texto=texto+""+hemisferios;texto=texto+""+salto;
	cout << "\nPor favor escriba el hemisferio con mas presencia de astros:     \n ejm: hemisferio norte, (sur, occidental.... ,etc.)0=exit \n\n   ";
	getline(cin, astro); astroensigno(astro);
system("CLS");texto=texto+""+salto;texto=texto+"Capitulo 16: Planetas retrogrados:\n\n\n"+salto;
cout << "\nEscriba los planetas retrogrados de la carta:\n ejemplo mercurio retrogrado, (venus retrogrado,etc.)    \n0=exit\n\n\n\n   ";
	aspectos();
system("CLS");texto=texto+""+salto;
cout << "\nSi quiere complementar alguna informacion copiela en el archivo otro.txt de la carpeta,  \nguarde la informacion y vuelva a la consola y digite 'otro'.   0=exit\n\n\n\n   ";
	aspectos();
	system("CLS");texto=texto+""+salto;texto=texto+"Capitulo 17: Influencias astrológicas que debe tener en cuenta este año:\n\n\n"+salto;texto=texto+""+informe_predictivo;
cout << "\nPor favor destaque uno o mas eventos astrologicos que estan por\n suceder en la carta del nativo    \nejm: saturno ascendente transito, primer retorno de saturno..)0=exit\n\n\n\n   ";
	aspectos();texto=texto+""+mercurio_retrogradotransito;


system("CLS");texto=texto+""+salto;texto=texto+"Capitulo 18: Nakshatras y anexos interesantes de Astrología Hindu o Jyotish:\n\n\n"+nakshatra;texto=texto+""+salto;
	cout << "\nPor favor escriba el nakshatra o morada lunar:    0=exit\n\n   ";
	getline(cin, astro); astroensigno(astro);
	system("CLS");texto=texto+""+salto;
cout << "\nSi quiere agregar una informacion extra, abra la carpeta y \nen el archivo 'otro' copie la informacion que desee incluir   \ndespues escriba la palabra 'otro' o '0' para salir\n\n\n\n   ";
	aspectos();
	system("CLS");texto=texto+""+salto;texto=texto+""+fuentes;
	carta_astral.open("01_carta_astral.txt", ios::out); if (carta_astral.fail()) { cout << "No se pudo crear el archivo 'carta_astral'"; }
	carta_astral << texto;
	carta_astral.close();


	cout << "\n todos los registros se han creado y guardado en el carta_astral.txt correctamente";


	system("pause");
	return 0;
}









































void astroensigno(string astro) {
	ifstream signo;
	

	
	do {astro_txt = astro + "" + txt;
	cout << "\n\n";

if (astro_txt == "bharani.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "krittika.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "rohini.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "mrigashira.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ardra.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "punarvasu.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "pushya.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ashlesha.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "magha.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "purva phalguni.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "uttara phalguni.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "hasta.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "chitra.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "swati.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "visakha.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "anuradha.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "jyeshtha.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "mula.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "purva ashadha.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "uttara ashadha.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "abhijit.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "shravana.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "dhanishta.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "shatabhisha.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "purva bhadrapada.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "uttara bhadrapada.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "revati.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "primer retorno de saturno.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "mercurio retrogrado.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "segundo retorno de saturno.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "tercer retorno de saturno.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "sol en aries.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "sol en tauro.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "sol en geminis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "sol en cancer.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "sol en leo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "sol en virgo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "sol en libra.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "sol en escorpio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "sol en sagitario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "sol en capricornio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "sol en acuario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "sol en piscis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "sol en casa 1.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "sol en casa 2.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "sol en casa 3.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "sol en casa 4.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "sol en casa 5.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "sol en casa 6.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "sol en casa 7.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "sol en casa 8.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "sol en casa 9.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "sol en casa 10.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "sol en casa 11.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "sol en casa 12.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "luna en aries .txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "luna en tauro.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "luna en geminis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "luna en cancer.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "luna en leo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "luna en virgo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "luna en libra.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "luna en escorpio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "luna en sagitario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "luna en capricornio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "luna en acuario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "luna en piscis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "luna en casa 1.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "luna en casa 2.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "luna en casa 3.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "luna en casa 4.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "luna en casa 5.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "luna en casa 6.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "luna en casa 7.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "luna en casa 8.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "luna en casa 9.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "luna en casa 10.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "luna en casa 11.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "luna en casa 12.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "mercurio en aries.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "mercurio en tauro.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "mercurio en geminis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "mercurio en cancer.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "mercurio en leo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "mercurio en virgo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "mercurio en libra.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "mercurio en escorpio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "mercurio en sagitario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "mercurio en capricornio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "mercurio en acuario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "mercurio en piscis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "mercurio en casa 1.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "mercurio en casa 2.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "mercurio en casa 3.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "mercurio en casa 4.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "mercurio en casa 5.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "mercurio en casa 6.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "mercurio en casa 7.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "mercurio en casa 8.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "mercurio en casa 9.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "mercurio en casa 10.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "mercurio en casa 11.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "mercurio en casa 12.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "venus en aries.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "venus en tauro.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "venus en geminis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "venus en cancer.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "venus en leo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "venus en virgo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "venus en libra.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "venus en escorpio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "venus en sagitario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "venus en capricornio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "venus en acuario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "venus en piscis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "venus en casa 1.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "venus en casa 2.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "venus en casa 3.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "venus en casa 4.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "venus en casa 5.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "venus en casa 6.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "venus en casa 7.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "venus en casa 8.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "venus en casa 9.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "venus en casa 10.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "venus en casa 11.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "venus en casa 12.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "marte en aries.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "marte en tauro.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "marte en geminis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "marte en cancer.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "marte en leo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "marte en virgo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "marte en libra.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "marte en escorpio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "marte en sagitario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "marte en capricornio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "marte en acuario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "marte en piscis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "marte en casa 1.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "marte en casa 2.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "marte en casa 3.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "marte en casa 4.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "marte en casa 5.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "marte en casa 6.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "marte en casa 7.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "marte en casa 8.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "marte en casa 9.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "marte en casa 10.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "marte en casa 11.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "marte en casa 12.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "jupiter en aries.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "jupiter en tauro.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "jupiter en geminis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "jupiter en cancer.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "jupiter en leo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "jupiter en virgo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "jupiter en libra.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "jupiter en escorpio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "jupiter en sagitario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "jupiter en capricornio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "jupiter en acuario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "jupiter en piscis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "jupiter en casa 1.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "jupiter en casa 2.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "jupiter en casa 3.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "jupiter en casa 4.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "jupiter en casa 5.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "jupiter en casa 6.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "jupiter en casa 7.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "jupiter en casa 8.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "jupiter en casa 9.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "jupiter en casa 10.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "jupiter en casa 11.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "jupiter en casa 12.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "urano en aries.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "urano en tauro.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "urano en geminis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "urano en cancer.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "urano en leo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "urano en virgo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "urano en libra.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "urano en escorpio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "urano en sagitario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "urano en capricornio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "urano en acuario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "urano en piscis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "urano en casa 1.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "urano en casa 2.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "urano en casa 3.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "urano en casa 4.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "urano en casa 5.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "urano en casa 6.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "urano en casa 7.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "urano en casa 8.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "urano en casa 9.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "urano en casa 10.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "urano en casa 11.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "urano en casa 12.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "saturno en aries.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "saturno en tauro.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "saturno en geminis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "saturno en cancer.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "saturno en leo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "saturno en virgo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "saturno en libra.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "saturno en escorpio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "saturno en sagitario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "saturno en capricornio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "saturno en acuario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "saturno en piscis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "saturno en casa 1.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "saturno en casa 2.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "saturno en casa 3.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "saturno en casa 4.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "saturno en casa 5.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "saturno en casa 6.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "saturno en casa 7.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "saturno en casa 8.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "saturno en casa 9.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "saturno en casa 10.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "saturno en casa 11.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "saturno en casa 12.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "neptuno en aries.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "neptuno en tauro.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "neptuno en geminis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "neptuno en cancer.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "neptuno en leo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "neptuno en virgo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "neptuno en libra.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "neptuno en escorpio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "neptuno en sagitario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "neptuno en capricornio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "neptuno en acuario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "neptuno en piscis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "neptuno en casa 1.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "neptuno en casa 2.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "neptuno en casa 3.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "neptuno en casa 4.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "neptuno en casa 5.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "neptuno en casa 6.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "neptuno en casa 7.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "neptuno en casa 8.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "neptuno en casa 9.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "neptuno en casa 10.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "neptuno en casa 11.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "neptuno en casa 12.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "pluton en aries.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "pluton en tauro.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "pluton en geminis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "pluton en cancer.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "pluton en leo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "pluton en virgo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "pluton en libra.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "pluton en escorpio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "pluton en sagitario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "pluton en capricornio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "pluton en acuario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "pluton en piscis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "pluton en casa 1.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "pluton en casa 2.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "pluton en casa 3.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "pluton en casa 4.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "pluton en casa 5.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "pluton en casa 6.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "pluton en casa 7.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "pluton en casa 8.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "pluton en casa 9.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "pluton en casa 10.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "pluton en casa 11.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "pluton en casa 12.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "nodo norte en aries.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo norte en tauro.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo norte en geminis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo norte en cancer.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo norte en leo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo norte en virgo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo norte en libra.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo norte en escorpio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo norte en sagitario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo norte en capricornio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo norte en acuario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo norte en piscis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "nodo sur en casa 1.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo sur en casa 2.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo sur en casa 3.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo sur en casa 4.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo sur en casa 5.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo sur en casa 6.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo sur en casa 7.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo sur en casa 8.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo sur en casa 9.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo sur en casa 10.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo sur en casa 11.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo sur en casa 12.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "nodo sur en aries.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo sur en tauro.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo sur en geminis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo sur en cancer.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo sur en leo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo sur en virgo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo sur en libra.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo sur en escorpio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo sur en sagitario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo sur en capricornio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo sur en acuario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo sur en piscis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "nodo norte en casa 1.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo norte en casa 2.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo norte en casa 3.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo norte en casa 4.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo norte en casa 5.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo norte en casa 6.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo norte en casa 7.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo norte en casa 8.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo norte en casa 9.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo norte en casa 10.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo norte en casa 11.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "nodo norte en casa 12.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "lilith en aries.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "lilith en tauro.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "lilith en geminis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "lilith en cancer.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "lilith en leo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "lilith en virgo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "lilith en libra.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "lilith en escorpio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "lilith en sagitario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "lilith en capricornio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "lilith en acuario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "lilith en piscis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "lilith en casa 1.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "lilith en casa 2.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "lilith en casa 3.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "lilith en casa 4.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "lilith en casa 5.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "lilith en casa 6.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "lilith en casa 7.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "lilith en casa 8.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "lilith en casa 9.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "lilith en casa 10.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "lilith en casa 11.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "lilith en casa 12.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "ceres en aries.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ceres en tauro.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ceres en geminis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ceres en cancer.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ceres en leo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ceres en virgo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ceres en libra.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ceres en escorpio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ceres en sagitario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ceres en capricornio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ceres en acuario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ceres en piscis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "ceres en casa 1.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ceres en casa 2.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ceres en casa 3.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ceres en casa 4.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ceres en casa 5.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ceres en casa 6.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ceres en casa 7.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ceres en casa 8.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ceres en casa 9.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ceres en casa 10.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ceres en casa 11.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ceres en casa 12.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "quiron en aries.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "quiron en tauro.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "quiron en geminis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "quiron en cancer.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "quiron en leo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "quiron en virgo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "quiron en libra.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "quiron en escorpio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "quiron en sagitario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "quiron en capricornio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "quiron en acuario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "quiron en piscis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "quiron en casa 1.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "quiron en casa 2.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "quiron en casa 3.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "quiron en casa 4.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "quiron en casa 5.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "quiron en casa 6.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "quiron en casa 7.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "quiron en casa 8.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "quiron en casa 9.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "quiron en casa 10.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "quiron en casa 11.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "quiron en casa 12.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "palas en aries.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "palas en tauro.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "palas en geminis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "palas en cancer.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "palas en leo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "palas en virgo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "palas en libra.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "palas en escorpio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "palas en sagitario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "palas en capricornio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "palas en acuario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "palas en piscis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "palas en casa 1.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "palas en casa 2.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "palas en casa 3.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "palas en casa 4.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "palas en casa 5.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "palas en casa 6.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "palas en casa 7.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "palas en casa 8.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "palas en casa 9.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "palas en casa 10.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "palas en casa 11.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "palas en casa 12.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "juno en aries.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "juno en tauro.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "juno en geminis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "juno en cancer.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "juno en leo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "juno en virgo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "juno en libra.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "juno en escorpio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "juno en sagitario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "juno en capricornio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "juno en acuario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "juno en piscis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "juno en casa 1.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "juno en casa 2.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "juno en casa 3.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "juno en casa 4.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "juno en casa 5.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "juno en casa 6.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "juno en casa 7.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "juno en casa 8.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "juno en casa 9.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "juno en casa 10.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "juno en casa 11.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "juno en casa 12.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "vesta en aries.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "vesta en tauro.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "vesta en geminis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "vesta en cancer.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "vesta en leo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "vesta en virgo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "vesta en libra.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "vesta en escorpio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "vesta en sagitario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "vesta en capricornio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "vesta en acuario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "vesta en piscis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "vesta en casa 1.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "vesta en casa 2.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "vesta en casa 3.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "vesta en casa 4.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "vesta en casa 5.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "vesta en casa 6.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "vesta en casa 7.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "vesta en casa 8.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "vesta en casa 9.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "vesta en casa 10.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "vesta en casa 11.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "vesta en casa 12.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}

	if (astro_txt == "ascendente en aries.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ascendente en tauro.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ascendente en geminis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ascendente en cancer.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ascendente en leo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ascendente en virgo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ascendente en libra.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ascendente en escorpio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ascendente en sagitario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ascendente en capricornio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ascendente en acuario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "ascendente en piscis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "medio cielo en aries.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "medio cielo en tauro.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "medio cielo en geminis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "medio cielo en cancer.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "medio cielo en leo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "medio cielo en virgo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "medio cielo en libra.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "medio cielo en escorpio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "medio cielo en sagitario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "medio cielo en capricornio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "medio cielo en acuario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "medio cielo en piscis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }}
	if (astro_txt == "fortuna en aries.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "fortuna en tauro.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "fortuna en geminis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }}
	if (astro_txt == "fortuna en cancer.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "fortuna en leo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "fortuna en virgo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }}
	if (astro_txt == "fortuna en libra.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "fortuna en escorpio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "fortuna en sagitario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }}
	if (astro_txt == "fortuna en capricornio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "fortuna en acuario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "fortuna en piscis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }}
	if (astro_txt == "fortuna en casa 1.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "fortuna en casa 2.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "fortuna en casa 3.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }}
	if (astro_txt == "fortuna en casa 4.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "fortuna en casa 5.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "fortuna en casa 6.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }}
	if (astro_txt == "fortuna en casa 7.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "fortuna en casa 8.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "fortuna en casa 9.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }}
	if (astro_txt == "fortuna en casa 10.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "fortuna en casa 11.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "fortuna en casa 12.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }}
	if (astro_txt == "infortunio en aries.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "infortunio en tauro.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "infortunio en geminis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }}
	if (astro_txt == "infortunio en cancer.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "infortunio en leo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "infortunio en virgo.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }}
	if (astro_txt == "infortunio en libra.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "infortunio en escorpio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "infortunio en sagitario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }}
	if (astro_txt == "infortunio en capricornio.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "infortunio en acuario.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "infortunio en piscis.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }}
	if (astro_txt == "infortunio en casa 1.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "infortunio en casa 2.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "infortunio en casa 3.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }}
	if (astro_txt == "infortunio en casa 4.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "infortunio en casa 5.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "infortunio en casa 6.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }}
	if (astro_txt == "infortunio en casa 7.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "infortunio en casa 8.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "infortunio en casa 9.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }}
	if (astro_txt == "infortunio en casa 10.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "infortunio en casa 11.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "infortunio en casa 12.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }}
if (astro_txt == "hemisferio oriental.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }}
	if (astro_txt == "hemisferio occidental.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "hemisferio norte.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}
	if (astro_txt == "hemisferio sur.txt") {
		signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
		else { while (!signo.eof())getline(signo, signosdatos); }
	}if (astro_txt == "otro.txt") {signo.open(astro_txt.c_str(), ios::in); if (signo.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n" ;getline(cin,descripcion); texto=texto+""+descripcion+""+salto; while (!signo.eof())getline(signo, aspectosdatos); }}
	if (astro_txt == "0.txt") {astro="0";
	}
	else if ((astro_txt == "sol en aries.txt") ||
			(astro_txt == "sol en tauro.txt") ||
			(astro_txt == "sol en geminis.txt") ||
			(astro_txt == "sol en cancer.txt") ||
			(astro_txt == "sol en leo.txt") ||
			(astro_txt == "sol en virgo.txt") ||
			(astro_txt == "sol en libra.txt") ||
			(astro_txt == "sol en escorpio.txt") ||
			(astro_txt == "sol en sagitario.txt") ||
			(astro_txt == "sol en capricornio.txt") ||
			(astro_txt == "sol en acuario.txt") ||
			(astro_txt == "sol en piscis.txt") ||
			(astro_txt == "sol en casa 1.txt") ||
			(astro_txt == "sol en casa 2.txt") ||
			(astro_txt == "sol en casa 3.txt") ||
			(astro_txt == "sol en casa 4.txt") ||
			(astro_txt == "sol en casa 5.txt") ||
			(astro_txt == "sol en casa 6.txt") ||
			(astro_txt == "sol en casa 7.txt") ||
			(astro_txt == "sol en casa 8.txt") ||
			(astro_txt == "sol en casa 9.txt") ||
			(astro_txt == "sol en casa 10.txt") ||
			(astro_txt == "sol en casa 11.txt") ||
			(astro_txt == "sol en casa 12.txt") ||
			(astro_txt == "luna en aries.txt") ||
			(astro_txt == "luna en tauro.txt") ||
			(astro_txt == "luna en geminis.txt") ||
			(astro_txt == "luna en cancer.txt") ||
			(astro_txt == "luna en leo.txt") ||
			(astro_txt == "luna en virgo.txt") ||
			(astro_txt == "luna en libra.txt") ||
			(astro_txt == "luna en escorpio.txt") ||
			(astro_txt == "luna en sagitario.txt") ||
			(astro_txt == "luna en capricornio.txt") ||
			(astro_txt == "luna en acuario.txt") ||
			(astro_txt == "luna en piscis.txt") ||
			(astro_txt == "luna en casa 1.txt") ||
			(astro_txt == "luna en casa 2.txt") ||
			(astro_txt == "luna en casa 3.txt") ||
			(astro_txt == "luna en casa 4.txt") ||
			(astro_txt == "luna en casa 5.txt") ||
			(astro_txt == "luna en casa 6.txt") ||
			(astro_txt == "luna en casa 7.txt") ||
			(astro_txt == "luna en casa 8.txt") ||
			(astro_txt == "luna en casa 9.txt") ||
			(astro_txt == "luna en casa 10.txt") ||
			(astro_txt == "luna en casa 11.txt") ||
			(astro_txt == "luna en casa 12.txt") ||
			(astro_txt == "mercurio en aries.txt") ||
			(astro_txt == "mercurio en tauro.txt") ||
			(astro_txt == "mercurio en geminis.txt") ||
			(astro_txt == "mercurio en cancer.txt") ||
			(astro_txt == "mercurio en leo.txt") ||
			(astro_txt == "mercurio en virgo.txt") ||
			(astro_txt == "mercurio en libra.txt") ||
			(astro_txt == "mercurio en escorpio.txt") ||
			(astro_txt == "mercurio en sagitario.txt") ||
			(astro_txt == "mercurio en capricornio.txt") ||
			(astro_txt == "mercurio en acuario.txt") ||
			(astro_txt == "mercurio en piscis.txt") ||
			(astro_txt == "mercurio en casa 1.txt") ||
			(astro_txt == "mercurio en casa 2.txt") ||
			(astro_txt == "mercurio en casa 3.txt") ||
			(astro_txt == "mercurio en casa 4.txt") ||
			(astro_txt == "mercurio en casa 5.txt") ||
			(astro_txt == "mercurio en casa 6.txt") ||
			(astro_txt == "mercurio en casa 7.txt") ||
			(astro_txt == "mercurio en casa 8.txt") ||
			(astro_txt == "mercurio en casa 9.txt") ||
			(astro_txt == "mercurio en casa 10.txt") ||
			(astro_txt == "mercurio en casa 11.txt") ||
			(astro_txt == "mercurio en casa 12.txt") ||
			(astro_txt == "venus en aries.txt") ||
			(astro_txt == "venus en tauro.txt") ||
			(astro_txt == "venus en geminis.txt") ||
			(astro_txt == "venus en cancer.txt") ||
			(astro_txt == "venus en leo.txt") ||
			(astro_txt == "venus en virgo.txt") ||
			(astro_txt == "venus en libra.txt") ||
			(astro_txt == "venus en escorpio.txt") ||
			(astro_txt == "venus en sagitario.txt") ||
			(astro_txt == "venus en capricornio.txt") ||
			(astro_txt == "venus en acuario.txt") ||
			(astro_txt == "venus en piscis.txt") ||
			(astro_txt == "venus en casa 1.txt") ||
			(astro_txt == "venus en casa 2.txt") ||
			(astro_txt == "venus en casa 3.txt") ||
			(astro_txt == "venus en casa 4.txt") ||
			(astro_txt == "venus en casa 5.txt") ||
			(astro_txt == "venus en casa 6.txt") ||
			(astro_txt == "venus en casa 7.txt") ||
			(astro_txt == "venus en casa 8.txt") ||
			(astro_txt == "venus en casa 9.txt") ||
			(astro_txt == "venus en casa 10.txt") ||
			(astro_txt == "venus en casa 11.txt") ||
			(astro_txt == "venus en casa 12.txt") ||
			(astro_txt == "marte en aries.txt") ||
			(astro_txt == "marte en tauro.txt") ||
			(astro_txt == "marte en geminis.txt") ||
			(astro_txt == "marte en cancer.txt") ||
			(astro_txt == "marte en leo.txt") ||
			(astro_txt == "marte en virgo.txt") ||
			(astro_txt == "marte en libra.txt") ||
			(astro_txt == "marte en escorpio.txt") ||
			(astro_txt == "marte en sagitario.txt") ||
			(astro_txt == "marte en capricornio.txt") ||
			(astro_txt == "marte en acuario.txt") ||
			(astro_txt == "marte en piscis.txt") ||
			(astro_txt == "marte en casa 1.txt") ||
			(astro_txt == "marte en casa 2.txt") ||
			(astro_txt == "marte en casa 3.txt") ||
			(astro_txt == "marte en casa 4.txt") ||
			(astro_txt == "marte en casa 5.txt") ||
			(astro_txt == "marte en casa 6.txt") ||
			(astro_txt == "marte en casa 7.txt") ||
			(astro_txt == "marte en casa 8.txt") ||
			(astro_txt == "marte en casa 9.txt") ||
			(astro_txt == "marte en casa 10.txt") ||
			(astro_txt == "marte en casa 11.txt") ||
			(astro_txt == "marte en casa 12.txt") ||
			(astro_txt == "jupiter en aries.txt") ||
			(astro_txt == "jupiter en tauro.txt") ||
			(astro_txt == "jupiter en geminis.txt") ||
			(astro_txt == "jupiter en cancer.txt") ||
			(astro_txt == "jupiter en leo.txt") ||
			(astro_txt == "jupiter en virgo.txt") ||
			(astro_txt == "jupiter en libra.txt") ||
			(astro_txt == "jupiter en escorpio.txt") ||
			(astro_txt == "jupiter en sagitario.txt") ||
			(astro_txt == "jupiter en capricornio.txt") ||
			(astro_txt == "jupiter en acuario.txt") ||
			(astro_txt == "jupiter en piscis.txt") ||
			(astro_txt == "jupiter en casa 1.txt") ||
			(astro_txt == "jupiter en casa 2.txt") ||
			(astro_txt == "jupiter en casa 3.txt") ||
			(astro_txt == "jupiter en casa 4.txt") ||
			(astro_txt == "jupiter en casa 5.txt") ||
			(astro_txt == "jupiter en casa 6.txt") ||
			(astro_txt == "jupiter en casa 7.txt") ||
			(astro_txt == "jupiter en casa 8.txt") ||
			(astro_txt == "jupiter en casa 9.txt") ||
			(astro_txt == "jupiter en casa 10.txt") ||
			(astro_txt == "jupiter en casa 11.txt") ||
			(astro_txt == "jupiter en casa 12.txt") ||
			(astro_txt == "saturno en aries.txt") ||
			(astro_txt == "saturno en tauro.txt") ||
			(astro_txt == "saturno en geminis.txt") ||
			(astro_txt == "saturno en cancer.txt") ||
			(astro_txt == "saturno en leo.txt") ||
			(astro_txt == "saturno en virgo.txt") ||
			(astro_txt == "saturno en libra.txt") ||
			(astro_txt == "saturno en escorpio.txt") ||
			(astro_txt == "saturno en sagitario.txt") ||
			(astro_txt == "saturno en capricornio.txt") ||
			(astro_txt == "saturno en acuario.txt") ||
			(astro_txt == "saturno en piscis.txt") ||
			(astro_txt == "saturno en casa 1.txt") ||
			(astro_txt == "saturno en casa 2.txt") ||
			(astro_txt == "saturno en casa 3.txt") ||
			(astro_txt == "saturno en casa 4.txt") ||
			(astro_txt == "saturno en casa 5.txt") ||
			(astro_txt == "saturno en casa 6.txt") ||
			(astro_txt == "saturno en casa 7.txt") ||
			(astro_txt == "saturno en casa 8.txt") ||
			(astro_txt == "saturno en casa 9.txt") ||
			(astro_txt == "saturno en casa 10.txt") ||
			(astro_txt == "saturno en casa 11.txt") ||
			(astro_txt == "saturno en casa 12.txt") ||
			(astro_txt == "urano en aries.txt") ||
			(astro_txt == "urano en tauro.txt") ||
			(astro_txt == "urano en geminis.txt") ||
			(astro_txt == "urano en cancer.txt") ||
			(astro_txt == "urano en leo.txt") ||
			(astro_txt == "urano en virgo.txt") ||
			(astro_txt == "urano en libra.txt") ||
			(astro_txt == "urano en escorpio.txt") ||
			(astro_txt == "urano en sagitario.txt") ||
			(astro_txt == "urano en capricornio.txt") ||
			(astro_txt == "urano en acuario.txt") ||
			(astro_txt == "urano en piscis.txt") ||
			(astro_txt == "urano en casa 1.txt") ||
			(astro_txt == "urano en casa 2.txt") ||
			(astro_txt == "urano en casa 3.txt") ||
			(astro_txt == "urano en casa 4.txt") ||
			(astro_txt == "urano en casa 5.txt") ||
			(astro_txt == "urano en casa 6.txt") ||
			(astro_txt == "urano en casa 7.txt") ||
			(astro_txt == "urano en casa 8.txt") ||
			(astro_txt == "urano en casa 9.txt") ||
			(astro_txt == "urano en casa 10.txt") ||
			(astro_txt == "urano en casa 11.txt") ||
			(astro_txt == "urano en casa 12.txt") ||
			(astro_txt == "neptuno en aries.txt") ||
			(astro_txt == "neptuno en tauro.txt") ||
			(astro_txt == "neptuno en geminis.txt") ||
			(astro_txt == "neptuno en cancer.txt") ||
			(astro_txt == "neptuno en leo.txt") ||
			(astro_txt == "neptuno en virgo.txt") ||
			(astro_txt == "neptuno en libra.txt") ||
			(astro_txt == "neptuno en escorpio.txt") ||
			(astro_txt == "neptuno en sagitario.txt") ||
			(astro_txt == "neptuno en capricornio.txt") ||
			(astro_txt == "neptuno en acuario.txt") ||
			(astro_txt == "neptuno en piscis.txt") ||
			(astro_txt == "neptuno en casa 1.txt") ||
			(astro_txt == "neptuno en casa 2.txt") ||
			(astro_txt == "neptuno en casa 3.txt") ||
			(astro_txt == "neptuno en casa 4.txt") ||
			(astro_txt == "neptuno en casa 5.txt") ||
			(astro_txt == "neptuno en casa 6.txt") ||
			(astro_txt == "neptuno en casa 7.txt") ||
			(astro_txt == "neptuno en casa 8.txt") ||
			(astro_txt == "neptuno en casa 9.txt") ||
			(astro_txt == "neptuno en casa 10.txt") ||
			(astro_txt == "neptuno en casa 11.txt") ||
			(astro_txt == "neptuno en casa 12.txt") ||
			(astro_txt == "pluton en aries.txt") ||
			(astro_txt == "pluton en tauro.txt") ||
			(astro_txt == "pluton en geminis.txt") ||
			(astro_txt == "pluton en cancer.txt") ||
			(astro_txt == "pluton en leo.txt") ||
			(astro_txt == "pluton en virgo.txt") ||
			(astro_txt == "pluton en libra.txt") ||
			(astro_txt == "pluton en escorpio.txt") ||
			(astro_txt == "pluton en sagitario.txt") ||
			(astro_txt == "pluton en capricornio.txt") ||
			(astro_txt == "pluton en acuario.txt") ||
			(astro_txt == "pluton en piscis.txt") ||
			(astro_txt == "pluton en casa 1.txt") ||
			(astro_txt == "pluton en casa 2.txt") ||
			(astro_txt == "pluton en casa 3.txt") ||
			(astro_txt == "pluton en casa 4.txt") ||
			(astro_txt == "pluton en casa 5.txt") ||
			(astro_txt == "pluton en casa 6.txt") ||
			(astro_txt == "pluton en casa 7.txt") ||
			(astro_txt == "pluton en casa 8.txt") ||
			(astro_txt == "pluton en casa 9.txt") ||
			(astro_txt == "pluton en casa 10.txt") ||
			(astro_txt == "pluton en casa 11.txt") ||
			(astro_txt == "pluton en casa 12.txt") ||
			(astro_txt == "lilith en aries.txt") ||
			(astro_txt == "lilith en tauro.txt") ||
			(astro_txt == "lilith en geminis.txt") ||
			(astro_txt == "lilith en cancer.txt") ||
			(astro_txt == "lilith en leo.txt") ||
			(astro_txt == "lilith en virgo.txt") ||
			(astro_txt == "lilith en libra.txt") ||
			(astro_txt == "lilith en escorpio.txt") ||
			(astro_txt == "lilith en sagitario.txt") ||
			(astro_txt == "lilith en capricornio.txt") ||
			(astro_txt == "lilith en acuario.txt") ||
			(astro_txt == "lilith en piscis.txt") ||
			(astro_txt == "lilith en casa 1.txt") ||
			(astro_txt == "lilith en casa 2.txt") ||
			(astro_txt == "lilith en casa 3.txt") ||
			(astro_txt == "lilith en casa 4.txt") ||
			(astro_txt == "lilith en casa 5.txt") ||
			(astro_txt == "lilith en casa 6.txt") ||
			(astro_txt == "lilith en casa 7.txt") ||
			(astro_txt == "lilith en casa 8.txt") ||
			(astro_txt == "lilith en casa 9.txt") ||
			(astro_txt == "lilith en casa 10.txt") ||
			(astro_txt == "lilith en casa 11.txt") ||
			(astro_txt == "lilith en casa 12.txt") ||
			(astro_txt == "quiron en aries.txt") ||
			(astro_txt == "quiron en tauro.txt") ||
			(astro_txt == "quiron en geminis.txt") ||
			(astro_txt == "quiron en cancer.txt") ||
			(astro_txt == "quiron en leo.txt") ||
			(astro_txt == "quiron en virgo.txt") ||
			(astro_txt == "quiron en libra.txt") ||
			(astro_txt == "quiron en escorpio.txt") ||
			(astro_txt == "quiron en sagitario.txt") ||
			(astro_txt == "quiron en capricornio.txt") ||
			(astro_txt == "quiron en acuario.txt") ||
			(astro_txt == "quiron en piscis.txt") ||
			(astro_txt == "quiron en casa 1.txt") ||
			(astro_txt == "quiron en casa 2.txt") ||
			(astro_txt == "quiron en casa 3.txt") ||
			(astro_txt == "quiron en casa 4.txt") ||
			(astro_txt == "quiron en casa 5.txt") ||
			(astro_txt == "quiron en casa 6.txt") ||
			(astro_txt == "quiron en casa 7.txt") ||
			(astro_txt == "quiron en casa 8.txt") ||
			(astro_txt == "quiron en casa 9.txt") ||
			(astro_txt == "quiron en casa 10.txt") ||
			(astro_txt == "quiron en casa 11.txt") ||
			(astro_txt == "quiron en casa 12.txt") ||
			(astro_txt == "ceres en aries.txt") ||
			(astro_txt == "ceres en tauro.txt") ||
			(astro_txt == "ceres en geminis.txt") ||
			(astro_txt == "ceres en cancer.txt") ||
			(astro_txt == "ceres en leo.txt") ||
			(astro_txt == "ceres en virgo.txt") ||
			(astro_txt == "ceres en libra.txt") ||
			(astro_txt == "ceres en escorpio.txt") ||
			(astro_txt == "ceres en sagitario.txt") ||
			(astro_txt == "ceres en capricornio.txt") ||
			(astro_txt == "ceres en acuario.txt") ||
			(astro_txt == "ceres en piscis.txt") ||
			(astro_txt == "ceres en casa 1.txt") ||
			(astro_txt == "ceres en casa 2.txt") ||
			(astro_txt == "ceres en casa 3.txt") ||
			(astro_txt == "ceres en casa 4.txt") ||
			(astro_txt == "ceres en casa 5.txt") ||
			(astro_txt == "ceres en casa 6.txt") ||
			(astro_txt == "ceres en casa 7.txt") ||
			(astro_txt == "ceres en casa 8.txt") ||
			(astro_txt == "ceres en casa 9.txt") ||
			(astro_txt == "ceres en casa 10.txt") ||
			(astro_txt == "ceres en casa 11.txt") ||
			(astro_txt == "ceres en casa 12.txt") ||
			(astro_txt == "palas en aries.txt") ||
			(astro_txt == "palas en tauro.txt") ||
			(astro_txt == "palas en geminis.txt") ||
			(astro_txt == "palas en cancer.txt") ||
			(astro_txt == "palas en leo.txt") ||
			(astro_txt == "palas en virgo.txt") ||
			(astro_txt == "palas en libra.txt") ||
			(astro_txt == "palas en escorpio.txt") ||
			(astro_txt == "palas en sagitario.txt") ||
			(astro_txt == "palas en capricornio.txt") ||
			(astro_txt == "palas en acuario.txt") ||
			(astro_txt == "palas en piscis.txt") ||
			(astro_txt == "palas en casa 1.txt") ||
			(astro_txt == "palas en casa 2.txt") ||
			(astro_txt == "palas en casa 3.txt") ||
			(astro_txt == "palas en casa 4.txt") ||
			(astro_txt == "palas en casa 5.txt") ||
			(astro_txt == "palas en casa 6.txt") ||
			(astro_txt == "palas en casa 7.txt") ||
			(astro_txt == "palas en casa 8.txt") ||
			(astro_txt == "palas en casa 9.txt") ||
			(astro_txt == "palas en casa 10.txt") ||
			(astro_txt == "palas en casa 11.txt") ||
			(astro_txt == "palas en casa 12.txt") ||
			(astro_txt == "juno en aries.txt") ||
			(astro_txt == "juno en tauro.txt") ||
			(astro_txt == "juno en geminis.txt") ||
			(astro_txt == "juno en cancer.txt") ||
			(astro_txt == "juno en leo.txt") ||
			(astro_txt == "juno en virgo.txt") ||
			(astro_txt == "juno en libra.txt") ||
			(astro_txt == "juno en escorpio.txt") ||
			(astro_txt == "juno en sagitario.txt") ||
			(astro_txt == "juno en capricornio.txt") ||
			(astro_txt == "juno en acuario.txt") ||
			(astro_txt == "juno en piscis.txt") ||
			(astro_txt == "juno en casa 1.txt") ||
			(astro_txt == "juno en casa 2.txt") ||
			(astro_txt == "juno en casa 3.txt") ||
			(astro_txt == "juno en casa 4.txt") ||
			(astro_txt == "juno en casa 5.txt") ||
			(astro_txt == "juno en casa 6.txt") ||
			(astro_txt == "juno en casa 7.txt") ||
			(astro_txt == "juno en casa 8.txt") ||
			(astro_txt == "juno en casa 9.txt") ||
			(astro_txt == "juno en casa 10.txt") ||
			(astro_txt == "juno en casa 11.txt") ||
			(astro_txt == "juno en casa 12.txt") ||
			(astro_txt == "vesta en aries.txt") ||
			(astro_txt == "vesta en tauro.txt") ||
			(astro_txt == "vesta en geminis.txt") ||
			(astro_txt == "vesta en cancer.txt") ||
			(astro_txt == "vesta en leo.txt") ||
			(astro_txt == "vesta en virgo.txt") ||
			(astro_txt == "vesta en libra.txt") ||
			(astro_txt == "vesta en escorpio.txt") ||
			(astro_txt == "vesta en sagitario.txt") ||
			(astro_txt == "vesta en capricornio.txt") ||
			(astro_txt == "vesta en acuario.txt") ||
			(astro_txt == "vesta en piscis.txt") ||
			(astro_txt == "vesta en casa 1.txt") ||
			(astro_txt == "vesta en casa 2.txt") ||
			(astro_txt == "vesta en casa 3.txt") ||
			(astro_txt == "vesta en casa 4.txt") ||
			(astro_txt == "vesta en casa 5.txt") ||
			(astro_txt == "vesta en casa 6.txt") ||
			(astro_txt == "vesta en casa 7.txt") ||
			(astro_txt == "vesta en casa 8.txt") ||
			(astro_txt == "vesta en casa 9.txt") ||
			(astro_txt == "vesta en casa 10.txt") ||
			(astro_txt == "vesta en casa 11.txt") ||
			(astro_txt == "vesta en casa 12.txt") ||
			(astro_txt == "nodo norte en aries.txt") ||
			(astro_txt == "nodo norte en tauro.txt") ||
			(astro_txt == "nodo norte en geminis.txt") ||
			(astro_txt == "nodo norte en cancer.txt") ||
			(astro_txt == "nodo norte en leo.txt") ||
			(astro_txt == "nodo norte en virgo.txt") ||
			(astro_txt == "nodo norte en libra.txt") ||
			(astro_txt == "nodo norte en escorpio.txt") ||
			(astro_txt == "nodo norte en sagitario.txt") ||
			(astro_txt == "nodo norte en capricornio.txt") ||
			(astro_txt == "nodo norte en acuario.txt") ||
			(astro_txt == "nodo norte en piscis.txt") ||
			(astro_txt == "nodo norte en casa 1.txt") ||
			(astro_txt == "nodo norte en casa 2.txt") ||
			(astro_txt == "nodo norte en casa 3.txt") ||
			(astro_txt == "nodo norte en casa 4.txt") ||
			(astro_txt == "nodo norte en casa 5.txt") ||
			(astro_txt == "nodo norte en casa 6.txt") ||
			(astro_txt == "nodo norte en casa 7.txt") ||
			(astro_txt == "nodo norte en casa 8.txt") ||
			(astro_txt == "nodo norte en casa 9.txt") ||
			(astro_txt == "nodo norte en casa 10.txt") ||
			(astro_txt == "nodo norte en casa 11.txt") ||
			(astro_txt == "nodo norte en casa 12.txt") ||
			(astro_txt == "nodo sur en aries.txt") ||
			(astro_txt == "nodo sur en tauro.txt") ||
			(astro_txt == "nodo sur en geminis.txt") ||
			(astro_txt == "nodo sur en cancer.txt") ||
			(astro_txt == "nodo sur en leo.txt") ||
			(astro_txt == "nodo sur en virgo.txt") ||
			(astro_txt == "nodo sur en libra.txt") ||
			(astro_txt == "nodo sur en escorpio.txt") ||
			(astro_txt == "nodo sur en sagitario.txt") ||
			(astro_txt == "nodo sur en capricornio.txt") ||
			(astro_txt == "nodo sur en acuario.txt") ||
			(astro_txt == "nodo sur en piscis.txt") ||
			(astro_txt == "nodo sur en casa 1.txt") ||
			(astro_txt == "nodo sur en casa 2.txt") ||
			(astro_txt == "nodo sur en casa 3.txt") ||
			(astro_txt == "nodo sur en casa 4.txt") ||
			(astro_txt == "nodo sur en casa 5.txt") ||
			(astro_txt == "nodo sur en casa 6.txt") ||
			(astro_txt == "nodo sur en casa 7.txt") ||
			(astro_txt == "nodo sur en casa 8.txt") ||
			(astro_txt == "nodo sur en casa 9.txt") ||
			(astro_txt == "nodo sur en casa 10.txt") ||
			(astro_txt == "nodo sur en casa 11.txt") ||
			(astro_txt == "nodo sur en casa 12.txt") ||
			(astro_txt == "ascendente en aries.txt") ||
			(astro_txt == "ascendente en tauro.txt") ||
			(astro_txt == "ascendente en geminis.txt") ||
			(astro_txt == "ascendente en cancer.txt") ||
			(astro_txt == "ascendente en leo.txt") ||
			(astro_txt == "ascendente en virgo.txt") ||
			(astro_txt == "ascendente en libra.txt") ||
			(astro_txt == "ascendente en escorpio.txt") ||
			(astro_txt == "ascendente en sagitario.txt") ||
			(astro_txt == "ascendente en capricornio.txt") ||
			(astro_txt == "ascendente en acuario.txt") ||
			(astro_txt == "ascendente en piscis.txt") ||
			(astro_txt == "medio cielo en aries.txt") ||
			(astro_txt == "medio cielo en tauro.txt") ||
			(astro_txt == "medio cielo en geminis.txt") ||
			(astro_txt == "medio cielo en cancer.txt") ||
			(astro_txt == "medio cielo en leo.txt") ||
			(astro_txt == "medio cielo en virgo.txt") ||
			(astro_txt == "medio cielo en libra.txt") ||
			(astro_txt == "medio cielo en escorpio.txt") ||
			(astro_txt == "medio cielo en sagitario.txt") ||
			(astro_txt == "medio cielo en capricornio.txt") ||
			(astro_txt == "medio cielo en acuario.txt") ||
			(astro_txt == "medio cielo en piscis.txt") ||
			(astro_txt == "ashwini.txt") ||
			(astro_txt == "bharani.txt") ||
			(astro_txt == "krittika.txt") ||
			(astro_txt == "rohini.txt") ||
			(astro_txt == "mrigashira.txt") ||
			(astro_txt == "ardra.txt") ||
			(astro_txt == "punarvasu.txt") ||
			(astro_txt == "pushya.txt") ||
			(astro_txt == "ashlesha.txt") ||
			(astro_txt == "magha.txt") ||
			(astro_txt == "purva phalguni.txt") ||
			(astro_txt == "uttara phalguni.txt") ||
			(astro_txt == "hasta.txt") ||
			(astro_txt == "chitra.txt") ||
			(astro_txt == "swati.txt") ||
			(astro_txt == "visakha.txt") ||
			(astro_txt == "anuradha.txt") ||
			(astro_txt == "jyeshtha.txt") ||
			(astro_txt == "mula.txt") ||
			(astro_txt == "purva ashadha.txt") ||
			(astro_txt == "uttara ashadha.txt") ||
			(astro_txt == "abhijit.txt") ||
			(astro_txt == "shravana.txt") ||
			(astro_txt == "dhanishta.txt") ||
			(astro_txt == "shatabhisha.txt") ||
			(astro_txt == "purva bhadrapada.txt") ||
			(astro_txt == "uttara bhadrapada.txt") ||
			(astro_txt == "otro.txt") ||
			(astro_txt == "revati.txt")||
			(astro_txt == "fortuna en aries.txt") ||
			(astro_txt == "fortuna en geminis.txt") ||
			(astro_txt == "fortuna en tauro.txt") ||
			(astro_txt == "fortuna en cancer.txt") ||
			(astro_txt == "fortuna en leo.txt") ||
			(astro_txt == "fortuna en virgo.txt") ||
			(astro_txt == "fortuna en libra.txt") ||
			(astro_txt == "fortuna en escorpio.txt") ||
			(astro_txt == "fortuna en sagitario.txt") ||
			(astro_txt == "fortuna en capricornio.txt") ||
			(astro_txt == "fortuna en acuario.txt") ||
			(astro_txt == "fortuna en piscis.txt") ||
			(astro_txt == "fortuna en casa 1.txt") ||
			(astro_txt == "fortuna en casa 2.txt") ||
			(astro_txt == "fortuna en casa 3.txt") ||
			(astro_txt == "fortuna en casa 4.txt") ||
			(astro_txt == "fortuna en casa 5.txt") ||
			(astro_txt == "fortuna en casa 6.txt") ||
			(astro_txt == "fortuna en casa 7.txt") ||
			(astro_txt == "fortuna en casa 8.txt") ||
			(astro_txt == "fortuna en casa 9.txt") ||
			(astro_txt == "fortuna en casa 10.txt") ||
			(astro_txt == "fortuna en casa 11.txt") ||
			(astro_txt == "fortuna en casa 12.txt") ||
			(astro_txt == "infortunio en aries.txt") ||
			(astro_txt == "infortunio en tauro.txt") ||
			(astro_txt == "infortunio en geminis.txt") ||
			(astro_txt == "infortunio en cancer.txt") ||
			(astro_txt == "infortunio en leo.txt") ||
			(astro_txt == "infortunio en virgo.txt") ||
			(astro_txt == "infortunio en libra.txt") ||
			(astro_txt == "infortunio en escorpio.txt") ||
			(astro_txt == "infortunio en sagitario.txt") ||
			(astro_txt == "infortunio en capricornio.txt") ||
			(astro_txt == "infortunio en acuario.txt") ||
			(astro_txt == "infortunio en piscis.txt") ||
			(astro_txt == "infortunio en casa 1.txt") ||
			(astro_txt == "infortunio en casa 2.txt") ||
			(astro_txt == "infortunio en casa 3.txt") ||
			(astro_txt == "infortunio en casa 4.txt") ||
			(astro_txt == "infortunio en casa 5.txt") ||
			(astro_txt == "infortunio en casa 6.txt") ||
			(astro_txt == "infortunio en casa 7.txt") ||
			(astro_txt == "infortunio en casa 8.txt") ||
			(astro_txt == "infortunio en casa 9.txt") ||
			(astro_txt == "infortunio en casa 10.txt") ||
			(astro_txt == "infortunio en casa 11.txt") ||
			(astro_txt == "hemisferio norte.txt") ||
			(astro_txt == "hemisferio sur.txt") ||
			(astro_txt == "hemisferio occidental.txt") ||
			(astro_txt == "hemisferio oriental.txt") ||
			(astro_txt == "infortunio en casa 12.txt"))
		{cout << "se ha agregado correctamente al archivo\n\n"; texto = texto + "" + signosdatos;signosdatos=""; astro="0"; }
		else { cout << "Esta opcion no es valida, por favor escriba de nuevo: \n\n"; getline(cin, astro);  }
		}while (astro!="0");
		 cout << "\n";

		signo.close();
	}
	






























































	void aspectos() {
		ifstream aspectos;


		do{
			getline(cin, aspecto); cout << "\n\n";
			aspecto_txt = aspecto + "" + txt;
			if (aspecto_txt == "sol conjuncion luna.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol oposicion luna.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol trigono luna.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol cuadratura luna.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol semicuadratura luna.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol quincuncio luna.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol quintil luna.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol sextil luna.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol semisextil luna.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol conjuncion mercurio.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol sextil mercurio.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol conjuncion venus.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol sextil venus.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol semisextil venus.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol semicuadratura venus.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol conjuncion marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol oposicion marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol trigono marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol cuadratura marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol semicuadratura marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol quincuncio marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol quintil marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol sextil marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol semisextil marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol conjuncion jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol oposicion jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol trigono jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol cuadratura jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol semicuadratura jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol quintil jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol quincuncio jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol sextil jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol semisextil jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol conjuncion urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol oposicion urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol trigono urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol cuadratura urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol semicuadratura urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol quintil urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol quincuncio urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol sextil urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol semisextil urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol conjuncion neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol oposicion neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol trigono neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol cuadratura neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol semicuadratura neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol quintil neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol quincuncio neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol sextil neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol semisextil neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol conjuncion saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol oposicion saturno .txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol trigono saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol cuadratura saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol semicuadratura saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol quintil saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol quincuncio saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol sextil saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol semisextil saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol conjuncion pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol oposicion pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol trigono pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol cuadratura pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol semicuadratura pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol quintil pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol quincuncio pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol sextil pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol semisextil pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol conjuncion quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol oposicion quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol trigono quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol cuadratura quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol semicuadratura quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol quintil quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol quincuncio quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol sextilquiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol semisextil quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol conjuncion lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol oposicion lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol trigono lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol cuadratura lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol semicuadratura lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol quintil lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol quincuncio lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol sextil lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol semisextil lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol conjuncion ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol oposicion ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol trigono ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol cuadratura ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol semicuadratura ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol quintil ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol quincuncio ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol sextil ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol semisextil ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol conjuncion palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol oposicion palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol trigono palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol cuadratura palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol semicuadratura palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol quintil palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol quincuncio palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol sextil palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol semisextil palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol conjuncion juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol oposicion juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol trigono juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol cuadratura juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol semicuadratura juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol quintil juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol quincuncio juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol sextil juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol semisextil juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol conjuncion vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol oposicion vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol trigono vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol cuadratura vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol semicuadratura vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol quintil vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol quincuncio vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol sextil vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "sol semisextil vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna conjuncion mercurio.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna oposicion mercurio.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna trigono mercurio.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna cuadratura mercurio.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna semicuadratura mercurio.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna quintil mercurio.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna quincuncio mercurio.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna semisextil mercurio.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna sextil mercurio.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna conjuncion venus.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna oposicion venus.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna trigono venus.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna cuadratura venus.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna semicuadratura venus.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna quintil venus.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna quincuncio venus.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna semisextil venus.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna semicuadratura venus.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna conjuncion marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna oposicion marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna trigono marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna cuadratura marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna semicuadratura marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna quincuncio marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna quintil marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna sextil marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna semisextil marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna conjuncion jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna oposicion jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna trigono jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna cuadratura jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna semicuadratura jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna quintil jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna quincuncio jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna sextil jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna semisextil jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna conjuncion urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna oposicion urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna trigono urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna cuadratura urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna semicuadratura urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna quintil urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna quincuncio urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna sextil urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna semisextil urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna conjuncion neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna oposicion neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna trigono neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna cuadratura neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna semicuadratura neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna quintil neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna quincuncio neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna sextil neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna semisextil neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna conjuncion saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna oposicion saturno .txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna trigono saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna cuadratura saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna semicuadratura saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna quintil saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna quincuncio saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna sextil saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna semisextil saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna conjuncion pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna oposicion pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna trigono pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna cuadratura pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna semicuadratura pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna quintil pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna quincuncio pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna sextil pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna semisextil pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna conjuncion quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna oposicion quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna trigono quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna cuadratura quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna semicuadratura quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna quintil quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna quincuncio quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna sextilquiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna semisextil quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna conjuncion lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna oposicion lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna trigono lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna cuadratura lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna semicuadratura lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna quintil lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna quincuncio lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna sextil lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna semisextil lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna conjuncion ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna oposicion ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna trigono ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna cuadratura ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna semicuadratura ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna quintil ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna quincuncio ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna sextil ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna semisextil ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna conjuncion palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna oposicion palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna trigono palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna cuadratura palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna semicuadratura palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna quintil palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna quincuncio palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna sextil palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna semisextil palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna conjuncion juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna oposicion juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna trigono juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna cuadratura juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna semicuadratura juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna quintil juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna quincuncio juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna sextil juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna semisextil juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna conjuncion vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna oposicion vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna trigono vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna cuadratura vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna semicuadratura vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna quintil vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna quincuncio vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna sextil vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "luna semisextil vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio conjuncion venus.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio oposicion venus.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio trigono venus.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio cuadratura venus.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio semicuadratura venus.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio quintil venus.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio quincuncio venus.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio semisextil venus.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio semicuadratura venus.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio conjuncion marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio oposicion marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio trigono marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio cuadratura marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio semicuadratura marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio quincuncio marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio quintil marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio sextil marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio semisextil marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio conjuncion jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio oposicion jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio trigono jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio cuadratura jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio semicuadratura jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio quintil jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio quincuncio jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio sextil jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio semisextil jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio conjuncion urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio oposicion urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio trigono urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio cuadratura urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio semicuadratura urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio quintil urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio quincuncio urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio sextil urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio semisextil urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio conjuncion neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio oposicion neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio trigono neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio cuadratura neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio semicuadratura neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio quintil neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio quincuncio neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio sextil neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio semisextil neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio conjuncion saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio oposicion saturno .txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio trigono saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio cuadratura saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio semicuadratura saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio quintil saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio quincuncio saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio sextil saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio semisextil saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio conjuncion pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio oposicion pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio trigono pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio cuadratura pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio semicuadratura pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio quintil pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio quincuncio pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio sextil pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio semisextil pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio conjuncion quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio oposicion quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio trigono quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio cuadratura quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio semicuadratura quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio quintil quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio quincuncio quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio sextilquiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio semisextil quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio conjuncion lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio oposicion lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio trigono lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio cuadratura lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio semicuadratura lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio quintil lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio quincuncio lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio sextil lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio semisextil lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio conjuncion ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio oposicion ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio trigono ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio cuadratura ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio semicuadratura ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio quintil ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio quincuncio ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio sextil ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio semisextil ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio conjuncion palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio oposicion palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio trigono palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio cuadratura palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio semicuadratura palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio quintil palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio quincuncio palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio sextil palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio semisextil palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio conjuncion juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio oposicion juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio trigono juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio cuadratura juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio semicuadratura juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio quintil juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio quincuncio juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio sextil juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio semisextil juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio conjuncion vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio oposicion vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio trigono vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio cuadratura vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio semicuadratura vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio quintil vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio quincuncio vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio sextil vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "mercurio semisextil vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus conjuncion marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus oposicion marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus trigono marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus cuadratura marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus semicuadratura marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus quincuncio marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus quintil marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus sextil marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus semisextil marte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus conjuncion jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus oposicion jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus trigono jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus cuadratura jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus semicuadratura jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus quintil jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus quincuncio jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus sextil jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus semisextil jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus conjuncion urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus oposicion urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus trigono urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus cuadratura urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus semicuadratura urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus quintil urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus quincuncio urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus sextil urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus semisextil urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus conjuncion neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus oposicion neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus trigono neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus cuadratura neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus semicuadratura neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus quintil neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus quincuncio neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus sextil neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus semisextil neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus conjuncion saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus oposicion saturno .txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus trigono saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus cuadratura saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus semicuadratura saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus quintil saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus quincuncio saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus sextil saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus semisextil saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus conjuncion pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus oposicion pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus trigono pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus cuadratura pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus semicuadratura pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus quintil pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus quincuncio pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus sextil pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus semisextil pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus conjuncion quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus oposicion quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus trigono quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus cuadratura quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus semicuadratura quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus quintil quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus quincuncio quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus sextilquiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus semisextil quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus conjuncion lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus oposicion lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus trigono lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus cuadratura lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus semicuadratura lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus quintil lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus quincuncio lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus sextil lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus semisextil lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus conjuncion ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus oposicion ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus trigono ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus cuadratura ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus semicuadratura ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus quintil ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus quincuncio ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus sextil ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus semisextil ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus conjuncion palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus oposicion palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus trigono palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus cuadratura palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus semicuadratura palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus quintil palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus quincuncio palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus sextil palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus semisextil palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus conjuncion juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus oposicion juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus trigono juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus cuadratura juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus semicuadratura juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus quintil juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus quincuncio juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus sextil juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus semisextil juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus conjuncion vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus oposicion vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus trigono vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus cuadratura vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus semicuadratura vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus quintil vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus quincuncio vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus sextil vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "venus semisextil vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte conjuncion jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte oposicion jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte trigono jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte cuadratura jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte semicuadratura jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte quintil jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte quincuncio jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte sextil jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte semisextil jupiter.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte conjuncion urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte oposicion urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte trigono urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte cuadratura urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte semicuadratura urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte quintil urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte quincuncio urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte sextil urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte semisextil urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte conjuncion neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte oposicion neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte trigono neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte cuadratura neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte semicuadratura neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte quintil neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte quincuncio neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte sextil neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte semisextil neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte conjuncion saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte oposicion saturno .txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte trigono saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte cuadratura saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte semicuadratura saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte quintil saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte quincuncio saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte sextil saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte semisextil saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte conjuncion pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte oposicion pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte trigono pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte cuadratura pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte semicuadratura pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte quintil pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte quincuncio pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte sextil pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte semisextil pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte conjuncion quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte oposicion quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte trigono quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte cuadratura quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte semicuadratura quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte quintil quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte quincuncio quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte sextilquiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte semisextil quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte conjuncion lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte oposicion lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte trigono lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte cuadratura lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte semicuadratura lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte quintil lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte quincuncio lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte sextil lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte semisextil lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte conjuncion ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte oposicion ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte trigono ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte cuadratura ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte semicuadratura ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte quintil ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte quincuncio ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte sextil ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte semisextil ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte conjuncion palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte oposicion palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte trigono palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte cuadratura palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte semicuadratura palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte quintil palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte quincuncio palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte sextil palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte semisextil palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte conjuncion juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte oposicion juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte trigono juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte cuadratura juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte semicuadratura juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte quintil juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte quincuncio juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte sextil juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte semisextil juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte conjuncion vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte oposicion vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte trigono vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte cuadratura vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte semicuadratura vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte quintil vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte quincuncio vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte sextil vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "marte semisextil vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter conjuncion urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter oposicion urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter trigono urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter cuadratura urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter semicuadratura urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter quintil urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter quincuncio urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter sextil urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter semisextil urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter conjuncion neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter oposicion neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter trigono neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter cuadratura neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter semicuadratura neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter quintil neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter quincuncio neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter sextil neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter semisextil neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter conjuncion saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter oposicion saturno .txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter trigono saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter cuadratura saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter semicuadratura saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter quintil saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter quincuncio saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter sextil saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter semisextil saturno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter conjuncion pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter oposicion pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter trigono pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter cuadratura pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter semicuadratura pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter quintil pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter quincuncio pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter sextil pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter semisextil pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter conjuncion quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter oposicion quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter trigono quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter cuadratura quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter semicuadratura quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter quintil quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter quincuncio quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter sextilquiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter semisextil quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter conjuncion lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter oposicion lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter trigono lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter cuadratura lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter semicuadratura lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter quintil lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter quincuncio lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter sextil lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter semisextil lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter conjuncion ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter oposicion ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter trigono ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter cuadratura ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter semicuadratura ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter quintil ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter quincuncio ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter sextil ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter semisextil ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter conjuncion palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter oposicion palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter trigono palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter cuadratura palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter semicuadratura palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter quintil palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter quincuncio palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter sextil palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter semisextil palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter conjuncion juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter oposicion juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter trigono juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter cuadratura juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter semicuadratura juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter quintil juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter quincuncio juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter sextil juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter semisextil juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter conjuncion vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter oposicion vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter trigono vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter cuadratura vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter semicuadratura vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter quintil vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter quincuncio vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter sextil vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "jupiter semisextil vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno conjuncion urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno oposicion urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno trigono urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno cuadratura urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno semicuadratura urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno quintil urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno quincuncio urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno sextil urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno semisextil urano.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno conjuncion neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno oposicion neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno trigono neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno cuadratura neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno semicuadratura neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno quintil neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno quincuncio neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno sextil neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno semisextil neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno conjuncion pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno oposicion pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno trigono pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno cuadratura pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno semicuadratura pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno quintil pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno quincuncio pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno sextil pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno semisextil pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno conjuncion quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno oposicion quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno trigono quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno cuadratura quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno semicuadratura quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno quintil quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno quincuncio quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno sextilquiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno semisextil quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno conjuncion lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno oposicion lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno trigono lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno cuadratura lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno semicuadratura lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno quintil lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno quincuncio lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno sextil lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno semisextil lilith.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno conjuncion ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno oposicion ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno trigono ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno cuadratura ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno semicuadratura ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno quintil ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno quincuncio ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno sextil ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno semisextil ceres.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno conjuncion palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno oposicion palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno trigono palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno cuadratura palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno semicuadratura palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno quintil palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno quincuncio palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno sextil palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno semisextil palas.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno conjuncion juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno oposicion juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno trigono juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno cuadratura juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno semicuadratura juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno quintil juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno quincuncio juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno sextil juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno semisextil juno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno conjuncion vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno oposicion vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno trigono vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno cuadratura vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno semicuadratura vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno quintil vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno quincuncio vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
			if (aspecto_txt == "saturno sextil vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
		
			if (aspecto_txt == "saturno semisextil vesta.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }
			}
if (aspecto_txt == "sol conjuncion ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "sol oposicion ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "sol trigono ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "sol cuadratura ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "luna conjuncion ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "luna oposicion ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "luna trigono ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "luna cuadratura ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "mercurio conjuncion ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "mercurio oposicion ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "mercurio trigono ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "mercurio cuadratura ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "venus conjuncion ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "venus oposicion ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "venus trigono ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "venus cuadratura ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "marte conjuncion ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "marte oposicion ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "marte trigono ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "marte cuadratura ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "jupiter conjuncion ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "jupiter oposicion ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "jupiter trigono ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "jupiter cuadratura ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "saturno conjuncion ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "saturno oposicion ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "saturno trigono ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "saturno cuadratura ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "urano conjuncion ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "urano oposicion ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "urano trigono ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "urano cuadratura ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "neptuno conjuncion ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "neptuno oposicion ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "neptuno trigono ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "neptuno cuadratura ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "pluton conjuncion ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "pluton oposicion ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "pluton trigono ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "pluton cuadratura ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "sol conjuncion medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "sol oposicion medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "sol trigono medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "sol cuadratura medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "luna conjuncion medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "luna oposicion medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "luna trigono medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "luna cuadratura medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "mercurio conjuncion medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "mercurio oposicion medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "mercurio trigono medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "mercurio cuadratura medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "venus conjuncion medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "venus oposicion medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "venus trigono medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "venus cuadratura medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "marte conjuncion medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "marte oposicion medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "marte trigono medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "marte cuadratura medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "jupiter conjuncion medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "jupiter oposicion medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "jupiter trigono medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "jupiter cuadratura medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "saturno conjuncion medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "saturno oposicion medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "saturno trigono medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "saturno cuadratura medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "urano conjuncion medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "urano oposicion medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "urano trigono medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "urano cuadratura medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "neptuno conjuncion medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "neptuno oposicion medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}

if (aspecto_txt == "neptuno trigono medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "neptuno cuadratura medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "pluton conjuncion medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "pluton oposicion medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}

if (aspecto_txt == "quiron conjuncion medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "quiron conjuncion ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "pluton trigono medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "pluton cuadratura medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "pluton retrogrado.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "neptuno retrogrado.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "urano retrogrado.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "saturno retrogrado.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "jupiter retrogrado.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "marte retrogrado.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "urano conjuncion quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "neptuno conjuncion quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "pluton conjuncion quiron.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "pluton oposicion al nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "pluton trigono nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "pluton cuadratura nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "pluton conjuncion nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "neptuno trigono nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "neptuno cuadratura nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "neptuno conjuncion nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "urano oposicion nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "urano trigono nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "urano cuadratura nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "urano conjuncion nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "saturno oposicion nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "saturno trigono nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "saturno cuadratura nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "saturno conjuncion nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "jupiter oposicion nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "jupiter trigono nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "jupiter conjuncion nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "marte oposicion nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "marte trigono nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "marte cuadratura nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "marte conjuncion nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "venus oposicion nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "venus trigono nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "venus cuadratura nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "venus conjuncion nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "mercurio trigono nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "mercurio cuadratura nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "mercurio conjuncion nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "mercurio oposicion nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "luna oposicion nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "luna trigono nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "luna cuadratura nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "sol oposicion nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "luna conjuncion nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "sol trigono nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "sol cuadratura nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "sol conjuncion nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "nodo norte oposicion ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "nodo norte trigono ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "nodo norte cuadratura ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "nodo norte conjuncion ascendente.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "nodo norte oposicion medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "nodo norte trigono medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "nodo norte cuadratura medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "nodo norte conjuncion medio cielo.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "neptuno oposicion nodo norte.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "urano conjuncion neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}

if (aspecto_txt == "urano trigono pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "urano cuadratura pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "neptuno trigono pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "neptuno cuadratura pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "urano trigono neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "urano cuadratura neptuno.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "urano conjuncion pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "neptuno conjuncion pluton.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "jupiter ascendente transito.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "jupiter medio cielo transito.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "jupiter saturno transito.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "saturno ascendente transito.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "saturno medio cielo transito.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "jupiter urano transito.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "jupiter neptuno transito.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "jupiter pluton transito.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "saturno urano transito.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "saturno neptuno transito.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "saturno pluton transito.txt") {
				aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
			else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}

if (aspecto_txt =="mercurio retrogrado.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "primer retorno saturno.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "segundo retorno saturno.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "tercer retorno saturno.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "saturno mercurio transito.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "saturno sol transito.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "saturno venus transito.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "saturno luna transito.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "saturno marte transito.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "saturno saturno transito.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "saturno jupiter transito.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "urano mercurio transito.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "urano sol transito.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "urano venus transito.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "urano luna transito.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "urano marte transito.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "urano saturno transito.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "urano jupiter transito.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "neptuno mercurio transito.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "neptuno sol transito.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "neptuno venus transito.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "neptuno luna transito.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "neptuno marte transito.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}			
if (aspecto_txt == "jupiter sol transito.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "neptuno saturno transito.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "neptuno jupiter transito.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "marte mercurio transito.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "marte sol transito.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "marte venus transito.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "marte luna transito.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "marte marte transito.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "marte saturno transito.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "marte jupiter transito.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "jupiter mercurio transito.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "jupiter venus transito.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "jupiter luna transito.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n" ;getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "jupiter marte transito.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n"; getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "jupiter jupiter transito.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n" ;getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "venus retrogrado.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n" ;getline(cin,descripcion); texto=texto+""+descripcion; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "otro.txt") {aspectos.open(aspecto_txt.c_str(), ios::in); if (aspectos.fail()) { cout << "no se encuentra el archivo"; exit(1); }
				else { cout<<"escriba una descripcion:   \n\n\n" ;getline(cin,descripcion); texto=texto+""+descripcion+""+salto; while (!aspectos.eof())getline(aspectos, aspectosdatos); }}
if (aspecto_txt == "0.txt") {aspecto="";}
			else if ((aspecto_txt == "sol conjuncion luna.txt") ||
				(aspecto_txt == "otro.txt") ||
				(aspecto_txt == "mercurio retrogrado.txt") ||
				(aspecto_txt == "jupiter jupiter transito.txt") ||
				(aspecto_txt == "jupiter marte transito.txt") ||
				(aspecto_txt == "jupiter luna transito.txt") ||
				(aspecto_txt == "jupiter venus transito.txt") ||
				(aspecto_txt == "urano mercurio transito.txt") ||
				(aspecto_txt == "saturno jupiter transito.txt") ||
				(aspecto_txt == "saturno saturno transito.txt") ||
				(aspecto_txt == "saturno marte transito.txt") ||
				(aspecto_txt == "saturno luna transito.txt") ||
				(aspecto_txt == "saturno venus transito.txt") ||
				(aspecto_txt == "saturno sol transito.txt") ||
				(aspecto_txt == "saturno mercurio transito.txt") ||
				(aspecto_txt == "tercer retorno saturno.txt") ||
				(aspecto_txt == "segundo retorno saturno.txt") ||
				(aspecto_txt == "primer retorno saturno.txt") ||
				(aspecto_txt == "neptuno marte transito.txt") ||
				(aspecto_txt == "neptuno luna transito.txt") ||
				(aspecto_txt == "neptuno venus transito.txt") ||
				(aspecto_txt == "neptuno sol transito.txt") ||
				(aspecto_txt == "neptuno mercurio transito.txt") ||
				(aspecto_txt == "urano jupiter transito.txt") ||
				(aspecto_txt == "urano saturno transito.txt") ||
				(aspecto_txt == "urano marte transito.txt") ||
				(aspecto_txt == "urano luna transito.txt") ||
				(aspecto_txt == "urano venus transito.txt") ||
				(aspecto_txt == "urano sol transito.txt") ||
				(aspecto_txt == "jupiter sol transito.txt") ||
				(aspecto_txt == "jupiter mercurio transito.txt") ||
				(aspecto_txt == "marte jupiter transito.txt") ||
				(aspecto_txt == "marte saturno transito.txt") ||
				(aspecto_txt == "marte marte transito.txt") ||
				(aspecto_txt == "marte luna transito.txt") ||
				(aspecto_txt == "marte venus transito.txt") ||
				(aspecto_txt == "marte sol transito.txt") ||
				(aspecto_txt == "marte mercurio transito.txt") ||
				(aspecto_txt == "neptuno jupiter transito.txt") ||
				(aspecto_txt == "neptuno saturno transito.txt") ||
				(aspecto_txt == "venus retrogrado.txt") ||
				(aspecto_txt == "sol conjuncion ascendente.txt") ||
				(aspecto_txt == "sol oposicion ascendente.txt") ||
				(aspecto_txt == "sol trigono ascendente.txt") ||
				(aspecto_txt == "sol cuadratura ascendente.txt") ||
				(aspecto_txt == "luna conjuncion ascendente.txt") ||
				(aspecto_txt == "luna oposicion ascendente.txt") ||
				(aspecto_txt == "luna trigono ascendente.txt") ||
				(aspecto_txt == "luna cuadratura ascendente.txt") ||
				(aspecto_txt == "mercurio conjuncion ascendente.txt") ||
				(aspecto_txt == "mercurio oposicion ascendente.txt") ||
				(aspecto_txt == "mercurio trigono ascendente.txt") ||
				(aspecto_txt == "mercurio cuadratura ascendente.txt") ||
				(aspecto_txt == "venus conjuncion ascendente.txt") ||
				(aspecto_txt == "venus oposicion ascendente.txt") ||
				(aspecto_txt == "venus trigono ascendente.txt") ||
				(aspecto_txt == "venus cuadratura ascendente.txt") ||
				(aspecto_txt == "marte conjuncion ascendente.txt") ||
				(aspecto_txt == "marte oposicion ascendente.txt") ||
				(aspecto_txt == "marte trigono ascendente.txt") ||
				(aspecto_txt == "marte cuadratura ascendente.txt") ||
				(aspecto_txt == "jupiter conjuncion ascendente.txt") ||
				(aspecto_txt == "jupiter oposicion ascendente.txt") ||
				(aspecto_txt == "jupiter trigono ascendente.txt") ||
				(aspecto_txt == "jupiter cuadratura ascendente.txt") ||
				(aspecto_txt == "saturno conjuncion ascendente.txt") ||
				(aspecto_txt == "saturno oposicion ascendente.txt") ||
				(aspecto_txt == "saturno trigono ascendente.txt") ||
				(aspecto_txt == "saturno cuadratura ascendente.txt") ||
				(aspecto_txt == "urano conjuncion ascendente.txt") ||
				(aspecto_txt == "urano oposicion ascendente.txt") ||
				(aspecto_txt == "urano trigono ascendente.txt") ||
				(aspecto_txt == "urano cuadratura ascendente.txt") ||
				(aspecto_txt == "neptuno conjuncion ascendente.txt") ||
				(aspecto_txt == "neptuno oposicion ascendente.txt") ||
				(aspecto_txt == "neptuno trigono ascendente.txt") ||
				(aspecto_txt == "neptuno cuadratura ascendente.txt") ||
				(aspecto_txt == "pluton conjuncion ascendente.txt") ||
				(aspecto_txt == "pluton oposicion ascendente.txt") ||
				(aspecto_txt == "pluton trigono ascendente.txt") ||
				(aspecto_txt == "pluton cuadratura ascendente.txt") ||
				(aspecto_txt == "sol conjuncion medio cielo.txt") ||
				(aspecto_txt == "sol oposicion medio cielo.txt") ||
				(aspecto_txt == "sol trigono medio cielo.txt") ||
				(aspecto_txt == "sol cuadratura medio cielo.txt") ||
				(aspecto_txt == "luna conjuncion medio cielo.txt") ||
				(aspecto_txt == "luna oposicion medio cielo.txt") ||
				(aspecto_txt == "luna trigono medio cielo.txt") ||
				(aspecto_txt == "luna cuadratura medio cielo.txt") ||
				(aspecto_txt == "mercurio conjuncion medio cielo.txt") ||
				(aspecto_txt == "mercurio oposicion medio cielo.txt") ||
				(aspecto_txt == "mercurio trigono medio cielo.txt") ||
				(aspecto_txt == "mercurio cuadratura medio cielo.txt") ||
				(aspecto_txt == "venus conjuncion medio cielo.txt") ||
				(aspecto_txt == "venus oposicion medio cielo.txt") ||
				(aspecto_txt == "venus trigono medio cielo.txt") ||
				(aspecto_txt == "venus cuadratura medio cielo.txt") ||
				(aspecto_txt == "marte conjuncion medio cielo.txt") ||
				(aspecto_txt == "marte oposicion medio cielo.txt") ||
				(aspecto_txt == "marte trigono medio cielo.txt") ||
				(aspecto_txt == "marte cuadratura medio cielo.txt") ||
				(aspecto_txt == "jupiter conjuncion medio cielo.txt") ||
				(aspecto_txt == "jupiter oposicion medio cielo.txt") ||
				(aspecto_txt == "jupiter trigono medio cielo.txt") ||
				(aspecto_txt == "jupiter cuadratura medio cielo.txt") ||
				(aspecto_txt == "saturno conjuncion medio cielo.txt") ||
				(aspecto_txt == "saturno oposicion medio cielo.txt") ||
				(aspecto_txt == "saturno trigono medio cielo.txt") ||
				(aspecto_txt == "saturno cuadratura medio cielo.txt") ||
				(aspecto_txt == "urano conjuncion medio cielo.txt") ||
				(aspecto_txt == "urano oposicion medio cielo.txt") ||
				(aspecto_txt == "urano trigono medio cielo.txt") ||
				(aspecto_txt == "urano cuadratura medio cielo.txt") ||
				(aspecto_txt == "neptuno conjuncion medio cielo.txt") ||
				(aspecto_txt == "neptuno oposicion medio cielo.txt") ||
				(aspecto_txt == "neptuno trigono medio cielo.txt") ||
				(aspecto_txt == "neptuno cuadratura ascendente.txt") ||
				(aspecto_txt == "pluton conjuncion medio cielo.txt") ||
				(aspecto_txt == "pluton oposicion medio cielo.txt") ||
				(aspecto_txt == "pluton trigono medio cielo.txt") ||
				(aspecto_txt == "pluton cuadratura medio cielo.txt") ||
				(aspecto_txt == "jupiter jupiter transito.txt") ||
				(aspecto_txt == "jupiter marte transito.txt") ||
				(aspecto_txt == "jupiter luna transito.txt") ||
				(aspecto_txt == "jupiter venus transito.txt") ||
				(aspecto_txt == "jupiter sol transito.txt") ||
				(aspecto_txt == "jupiter mercurio transito.txt") ||
				(aspecto_txt == "marte jupiter transito.txt") ||
				(aspecto_txt == "marte saturno transito.txt") ||
				(aspecto_txt == "marte marte transito.txt") ||
				(aspecto_txt == "marte luna transito.txt") ||
				(aspecto_txt == "marte venus transito.txt") ||
				(aspecto_txt == "marte sol transito.txt") ||
				(aspecto_txt == "marte mercurio transito.txt") ||
				(aspecto_txt == "neptuno jupiter transito.txt") ||
				(aspecto_txt == "neptuno saturno transito.txt") ||
				(aspecto_txt == "neptuno marte transito.txt") ||
				(aspecto_txt == "neptuno luna transito.txt") ||
				(aspecto_txt == "neptuno venus transito.txt") ||
				(aspecto_txt == "neptuno sol transito.txt") ||
				(aspecto_txt == "neptuno mercurio transito.txt") ||
				(aspecto_txt == "urano jupiter transito.txt") ||
				(aspecto_txt == "urano saturno transito.txt") ||
				(aspecto_txt == "urano marte transito.txt") ||
				(aspecto_txt == "urano luna transito.txt") ||
				(aspecto_txt == "urano venus transito.txt") ||
				(aspecto_txt == "urano sol transito.txt") ||
				(aspecto_txt == "urano mercurio transito.txt") ||
				(aspecto_txt == "saturno jupiter transito.txt") ||
				(aspecto_txt == "saturno saturno transito.txt") ||
				(aspecto_txt == "saturno marte transito.txt") ||
				(aspecto_txt == "saturno luna transito.txt") ||
				(aspecto_txt == "saturno venus transito.txt") ||
				(aspecto_txt == "saturno sol transito.txt") ||
				(aspecto_txt == "saturno mercurio transito.txt") ||
				(aspecto_txt == "tercer retorno saturno.txt") ||
				(aspecto_txt == "segundo retorno saturno.txt") ||
				(aspecto_txt == "primer retorno saturno.txt") ||
				(aspecto_txt == "mercurio retrogrado.txt") ||
				(aspecto_txt == "venus retrogrado.txt") ||
				(aspecto_txt == "sol oposicion luna.txt") ||
				(aspecto_txt == "sol trigono luna.txt") ||
				(aspecto_txt == "sol cuadratura luna.txt") ||
				(aspecto_txt == "sol semicuadratura luna.txt") ||
				(aspecto_txt == "sol quintil luna.txt") ||
				(aspecto_txt == "sol quincuncio luna.txt") ||
				(aspecto_txt == "sol sextil luna.txt") ||
				(aspecto_txt == "sol conjuncion mercurio.txt") ||
				(aspecto_txt == "sol oposicion mercurio.txt") ||
				(aspecto_txt == "sol trigono mercurio.txt") ||
				(aspecto_txt == "sol cuadratura mercurio.txt") ||
				(aspecto_txt == "sol semicuadratura mercurio.txt") ||
				(aspecto_txt == "sol quintil mercurio.txt") ||
				(aspecto_txt == "sol quincuncio mercurio.txt") ||
				(aspecto_txt == "sol sextil mercurio.txt") ||
				(aspecto_txt == "sol conjuncion venus.txt") ||
				(aspecto_txt == "sol oposicion venus.txt") ||
				(aspecto_txt == "sol trigono venus.txt") ||
				(aspecto_txt == "sol cuadratura venus.txt") ||
				(aspecto_txt == "sol semicuadratura venus.txt") ||
				(aspecto_txt == "sol quintil venus.txt") ||
				(aspecto_txt == "sol quincuncio venus.txt") ||
				(aspecto_txt == "sol sextil venus.txt") ||
				(aspecto_txt == "sol conjuncion marte.txt") ||
				(aspecto_txt == "sol oposicion marte.txt") ||
				(aspecto_txt == "sol trigono marte.txt") ||
				(aspecto_txt == "sol cuadratura marte.txt") ||
				(aspecto_txt == "sol semicuadratura marte.txt") ||
				(aspecto_txt == "sol quintil marte.txt") ||
				(aspecto_txt == "sol quincuncio marte.txt") ||
				(aspecto_txt == "sol sextil marte.txt") ||
				(aspecto_txt == "sol conjuncion jupiter.txt") ||
				(aspecto_txt == "sol oposicion jupiter.txt") ||
				(aspecto_txt == "sol trigono jupiter.txt") ||
				(aspecto_txt == "sol cuadratura	jupiter.txt") ||
				(aspecto_txt == "sol semicuadratura jupiter.txt") ||
				(aspecto_txt == "sol quintil jupiter.txt") ||
				(aspecto_txt == "sol quincuncio jupiter.txt") ||
				(aspecto_txt == "sol sextil jupiter.txt") ||
				(aspecto_txt == "sol conjuncion saturno.txt") ||
				(aspecto_txt == "sol oposicion saturno.txt") ||
				(aspecto_txt == "sol trigono saturno.txt") ||
				(aspecto_txt == "sol cuadratura saturno.txt") ||
				(aspecto_txt == "sol semicuadratura saturno.txt") ||
				(aspecto_txt == "sol quintil saturno.txt") ||
				(aspecto_txt == "sol quincuncio	saturno.txt") ||
				(aspecto_txt == "sol sextil saturno.txt") ||
				(aspecto_txt == "sol conjuncion urano.txt") ||
				(aspecto_txt == "sol oposicion urano.txt") ||
				(aspecto_txt == "sol trigono urano.txt") ||
				(aspecto_txt == "sol cuadratura urano.txt") ||
				(aspecto_txt == "sol emicuadratura urano.txt") ||
				(aspecto_txt == "sol quintil urano.txt") ||
				(aspecto_txt == "sol quincuncio urano.txt") ||
				(aspecto_txt == "sol sextil urano.txt") ||
				(aspecto_txt == "sol conjuncion neptuno.txt") ||
				(aspecto_txt == "sol oposicion neptuno.txt") ||
				(aspecto_txt == "sol trigono neptuno.txt") ||
				(aspecto_txt == "sol cuadratura neptuno.txt") ||
				(aspecto_txt == "sol semicuadratura neptuno.txt") ||
				(aspecto_txt == "sol quintil neptuno.txt") ||
				(aspecto_txt == "sol quincuncio neptuno.txt") ||
				(aspecto_txt == "sol sextil neptuno.txt") ||
				(aspecto_txt == "sol conjuncion pluton.txt") ||
				(aspecto_txt == "sol oposicion pluton.txt") ||
				(aspecto_txt == "sol trigono pluton.txt") ||
				(aspecto_txt == "sol cuadratura pluton.txt") ||
				(aspecto_txt == "sol semicuadratura pluton.txt") ||
				(aspecto_txt == "sol quintil pluton.txt") ||
				(aspecto_txt == "sol quincuncio pluton.txt") ||
				(aspecto_txt == "sol sextil pluton.txt") ||
				(aspecto_txt == "sol conjuncion lilith.txt") ||
				(aspecto_txt == "sol oposicion lilith.txt") ||
				(aspecto_txt == "sol trigono lilith.txt") ||
				(aspecto_txt == "sol cuadratura lilith.txt") ||
				(aspecto_txt == "sol semicuadratura lilith.txt") ||
				(aspecto_txt == "sol quintil lilith.txt") ||
				(aspecto_txt == "sol quincuncio lilith.txt") ||
				(aspecto_txt == "sol sextil lilith.txt") ||
				(aspecto_txt == "sol conjuncion quiron.txt") ||
				(aspecto_txt == "sol oposicion quiron.txt") ||
				(aspecto_txt == "sol trigono quiron.txt") ||
				(aspecto_txt == "sol cuadratura quiron.txt") ||
				(aspecto_txt == "sol semicuadratura quiron.txt") ||
				(aspecto_txt == "sol quintil quiron.txt") ||
				(aspecto_txt == "sol quincuncio quiron.txt") ||
				(aspecto_txt == "sol sextil quiron.txt") ||
				(aspecto_txt == "sol conjuncion ceres.txt") ||
				(aspecto_txt == "sol oposicion ceres.txt") ||
				(aspecto_txt == "sol trigono ceres.txt") ||
				(aspecto_txt == "sol cuadratura ceres.txt") ||
				(aspecto_txt == "sol semicuadratura ceres.txt") ||
				(aspecto_txt == "sol quintil ceres.txt") ||
				(aspecto_txt == "sol quincuncio ceres.txt") ||
				(aspecto_txt == "sol sextil ceres.txt") ||
				(aspecto_txt == "sol conjuncion palas.txt") ||
				(aspecto_txt == "sol oposicion palas.txt") ||
				(aspecto_txt == "sol trigono palas.txt") ||
				(aspecto_txt == "sol cuadratura palas.txt") ||
				(aspecto_txt == "sol semicuadratura palas.txt") ||
				(aspecto_txt == "sol quintil palas.txt") ||
				(aspecto_txt == "sol quincuncio palas.txt") ||
				(aspecto_txt == "sol sextil palas.txt") ||
				(aspecto_txt == "sol conjuncion juno.txt") ||
				(aspecto_txt == "sol oposicion juno.txt") ||
				(aspecto_txt == "sol trigono juno.txt") ||
				(aspecto_txt == "sol cuadratura juno.txt") ||
				(aspecto_txt == "sol semicuadratura juno.txt") ||
				(aspecto_txt == "sol quintil juno.txt") ||
				(aspecto_txt == "sol quincuncio juno.txt") ||
				(aspecto_txt == "sol sextil juno.txt") ||
				(aspecto_txt == "sol conjuncion vesta.txt") ||
				(aspecto_txt == "sol oposicion vesta.txt") ||
				(aspecto_txt == "sol trigono vesta.txt") ||
				(aspecto_txt == "sol cuadratura vesta.txt") ||
				(aspecto_txt == "sol semicuadratura vesta.txt") ||
				(aspecto_txt == "sol quintil vesta.txt") ||
				(aspecto_txt == "sol quincuncio vesta.txt") ||
				(aspecto_txt == "sol sextil vesta.txt") ||
				(aspecto_txt == "luna conjuncion mercurio.txt") ||
				(aspecto_txt == "luna oposicion mercurio.txt") ||
				(aspecto_txt == "luna trigono mercurio.txt") ||
				(aspecto_txt == "luna cuadratura mercurio.txt") ||
				(aspecto_txt == "luna semicuadratura mercurio.txt") ||
				(aspecto_txt == "luna quintil mercurio.txt") ||
				(aspecto_txt == "luna quincuncio mercurio.txt") ||
				(aspecto_txt == "luna sextil mercurio.txt") ||
				(aspecto_txt == "luna conjuncion venus.txt") ||
				(aspecto_txt == "luna oposicion venus.txt") ||
				(aspecto_txt == "luna trigono venus.txt") ||
				(aspecto_txt == "luna cuadratura venus.txt") ||
				(aspecto_txt == "luna semicuadratura venus.txt") ||
				(aspecto_txt == "luna quintil venus.txt") ||
				(aspecto_txt == "luna quincuncio venus.txt") ||
				(aspecto_txt == "luna sextil venus.txt") ||
				(aspecto_txt == "luna conjuncion marte.txt") ||
				(aspecto_txt == "luna oposicion marte.txt") ||
				(aspecto_txt == "luna trigono marte.txt") ||
				(aspecto_txt == "luna cuadratura marte.txt") ||
				(aspecto_txt == "luna semicuadratura marte.txt") ||
				(aspecto_txt == "luna quintil marte.txt") ||
				(aspecto_txt == "luna quincuncio marte.txt") ||
				(aspecto_txt == "luna sextil marte.txt") ||
				(aspecto_txt == "luna conjuncion jupiter.txt") ||
				(aspecto_txt == "luna oposicion jupiter.txt") ||
				(aspecto_txt == "luna trigono jupiter.txt") ||
				(aspecto_txt == "luna cuadratura jupiter.txt") ||
				(aspecto_txt == "luna semicuadratura jupiter.txt") ||
				(aspecto_txt == "luna quintil jupiter.txt") ||
				(aspecto_txt == "luna quincuncio jupiter.txt") ||
				(aspecto_txt == "luna sextil jupiter.txt") ||
				(aspecto_txt == "luna conjuncion saturno.txt") ||
				(aspecto_txt == "luna oposicion saturno.txt") ||
				(aspecto_txt == "luna trigono saturno.txt") ||
				(aspecto_txt == "luna cuadratura saturno.txt") ||
				(aspecto_txt == "luna semicuadratura saturno.txt") ||
				(aspecto_txt == "luna quintil saturno.txt") ||
				(aspecto_txt == "luna quincuncio saturno.txt") ||
				(aspecto_txt == "luna sextil saturno.txt") ||
				(aspecto_txt == "luna conjuncion urano.txt") ||
				(aspecto_txt == "luna oposicion urano.txt") ||
				(aspecto_txt == "luna trigono urano.txt") ||
				(aspecto_txt == "luna cuadratura urano.txt") ||
				(aspecto_txt == "luna semicuadratura urano.txt") ||
				(aspecto_txt == "luna quintil urano.txt") ||
				(aspecto_txt == "luna quincuncio urano.txt") ||
				(aspecto_txt == "luna sextil urano.txt") ||
				(aspecto_txt == "luna conjuncion neptuno.txt") ||
				(aspecto_txt == "luna oposicion	neptuno.txt") ||
				(aspecto_txt == "luna trigono neptuno.txt") ||
				(aspecto_txt == "luna cuadratura neptuno.txt") ||
				(aspecto_txt == "luna semicuadratura neptuno.txt") ||
				(aspecto_txt == "luna quintil neptuno.txt") ||
				(aspecto_txt == "luna quincuncio neptuno.txt") ||
				(aspecto_txt == "luna sextil neptuno.txt") ||
				(aspecto_txt == "luna conjuncion pluton.txt") ||
				(aspecto_txt == "luna oposicion pluton.txt") ||
				(aspecto_txt == "luna trigono pluton.txt") ||
				(aspecto_txt == "luna cuadratura pluton.txt") ||
				(aspecto_txt == "luna semicuadratura pluton.txt") ||
				(aspecto_txt == "luna quintil pluton.txt") ||
				(aspecto_txt == "luna quincuncio pluton.txt") ||
				(aspecto_txt == "luna sextil pluton.txt") ||
				(aspecto_txt == "luna conjuncion lilith.txt") ||
				(aspecto_txt == "luna oposicion lilith.txt") ||
				(aspecto_txt == "luna trigono lilith.txt") ||
				(aspecto_txt == "luna cuadratura lilith.txt") ||
				(aspecto_txt == "luna semicuadratura lilith.txt") ||
				(aspecto_txt == "luna quintil lilith.txt") ||
				(aspecto_txt == "luna quincuncio lilith.txt") ||
				(aspecto_txt == "luna sextil lilith.txt") ||
				(aspecto_txt == "luna conjuncion quiron.txt") ||
				(aspecto_txt == "luna oposicion quiron.txt") ||
				(aspecto_txt == "luna trigono quiron.txt") ||
				(aspecto_txt == "luna cuadratura quiron.txt") ||
				(aspecto_txt == "luna semicuadratura quiron.txt") ||
				(aspecto_txt == "luna quintil quiron.txt") ||
				(aspecto_txt == "luna quincuncio quiron.txt") ||
				(aspecto_txt == "luna sextil quiron.txt") ||
				(aspecto_txt == "luna conjuncion ceres.txt") ||
				(aspecto_txt == "luna oposicion ceres.txt") ||
				(aspecto_txt == "luna trigono ceres.txt") ||
				(aspecto_txt == "luna cuadratura ceres.txt") ||
				(aspecto_txt == "luna semicuadratura ceres.txt") ||
				(aspecto_txt == "luna quintil ceres.txt") ||
				(aspecto_txt == "luna quincuncio ceres.txt") ||
				(aspecto_txt == "luna sextil ceres.txt") ||
				(aspecto_txt == "luna conjuncion palas.txt") ||
				(aspecto_txt == "luna oposicion palas.txt") ||
				(aspecto_txt == "luna trigono palas.txt") ||
				(aspecto_txt == "luna cuadratura palas.txt") ||
				(aspecto_txt == "luna semicuadratura palas.txt") ||
				(aspecto_txt == "luna quintil palas.txt") ||
				(aspecto_txt == "luna quincuncio palas.txt") ||
				(aspecto_txt == "luna sextil palas.txt") ||
				(aspecto_txt == "luna conjuncion juno.txt") ||
				(aspecto_txt == "luna oposicion juno.txt") ||
				(aspecto_txt == "luna trigono juno.txt") ||
				(aspecto_txt == "luna cuadratura juno.txt") ||
				(aspecto_txt == "luna semicuadratura juno.txt") ||
				(aspecto_txt == "luna quintil juno.txt") ||
				(aspecto_txt == "luna quincuncio juno.txt") ||
				(aspecto_txt == "luna sextil juno.txt") ||
				(aspecto_txt == "luna conjuncion vesta.txt") ||
				(aspecto_txt == "luna oposicion vesta.txt") ||
				(aspecto_txt == "luna trigono vesta.txt") ||
				(aspecto_txt == "luna cuadratura vesta.txt") ||
				(aspecto_txt == "luna semicuadratura vesta.txt") ||
				(aspecto_txt == "luna quintil vesta.txt") ||
				(aspecto_txt == "luna quincuncio vesta.txt") ||
				(aspecto_txt == "luna sextil vesta.txt") ||
				(aspecto_txt == "mercurio conjuncion venus.txt") ||
				(aspecto_txt == "mercurio oposicion venus.txt") ||
				(aspecto_txt == "mercurio trigono venus.txt") ||
				(aspecto_txt == "mercurio cuadratura venus.txt") ||
				(aspecto_txt == "mercurio semicuadratura venus.txt") ||
				(aspecto_txt == "mercurio quintil venus.txt") ||
				(aspecto_txt == "mercurio quincuncio venus.txt") ||
				(aspecto_txt == "mercurio sextil venus.txt") ||
				(aspecto_txt == "mercurio conjuncion marte.txt") ||
				(aspecto_txt == "mercurio oposicion marte.txt") ||
				(aspecto_txt == "mercurio trigono marte.txt") ||
				(aspecto_txt == "mercurio cuadratura marte.txt") ||
				(aspecto_txt == "mercurio semicuadratura marte.txt") ||
				(aspecto_txt == "mercurio quintil marte.txt") ||
				(aspecto_txt == "mercurio quincuncio marte.txt") ||
				(aspecto_txt == "mercurio sextil marte.txt") ||
				(aspecto_txt == "mercurio conjuncion jupiter.txt") ||
				(aspecto_txt == "mercurio oposicion jupiter.txt") ||
				(aspecto_txt == "mercurio trigono jupiter.txt") ||
				(aspecto_txt == "mercurio cuadratura jupiter.txt") ||
				(aspecto_txt == "mercurio semicuadratura jupiter.txt") ||
				(aspecto_txt == "mercurio quintil jupiter.txt") ||
				(aspecto_txt == "mercurio quincuncio jupiter.txt") ||
				(aspecto_txt == "mercurio sextil jupiter.txt") ||
				(aspecto_txt == "mercurio conjuncion saturno.txt") ||
				(aspecto_txt == "mercurio oposicion saturno.txt") ||
				(aspecto_txt == "mercurio trigono saturno.txt") ||
				(aspecto_txt == "mercurio cuadratura saturno.txt") ||
				(aspecto_txt == "mercurio semicuadratura saturno.txt") ||
				(aspecto_txt == "mercurio quintil saturno.txt") ||
				(aspecto_txt == "mercurio quincuncio saturno.txt") ||
				(aspecto_txt == "mercurio sextil saturno.txt") ||
				(aspecto_txt == "mercurio conjuncion urano.txt") ||
				(aspecto_txt == "mercurio oposicion urano.txt") ||
				(aspecto_txt == "mercurio trigono urano.txt") ||
				(aspecto_txt == "mercurio cuadratura urano.txt") ||
				(aspecto_txt == "mercurio semicuadratura urano.txt") ||
				(aspecto_txt == "mercurio quintil urano.txt") ||
				(aspecto_txt == "mercurio quincuncio urano.txt") ||
				(aspecto_txt == "mercurio sextil urano.txt") ||
				(aspecto_txt == "mercurio conjuncion neptuno.txt") ||
				(aspecto_txt == "mercurio oposicion neptuno.txt") ||
				(aspecto_txt == "mercurio trigono neptuno.txt") ||
				(aspecto_txt == "mercurio cuadratura neptuno.txt") ||
				(aspecto_txt == "mercurio semicuadratura neptuno.txt") ||
				(aspecto_txt == "mercurio quintil neptuno.txt") ||
				(aspecto_txt == "mercurio quincuncio neptuno.txt") ||
				(aspecto_txt == "mercurio sextil neptuno.txt") ||
				(aspecto_txt == "mercurio conjuncion pluton.txt") ||
				(aspecto_txt == "mercurio oposicion pluton.txt") ||
				(aspecto_txt == "mercurio trigono pluton.txt") ||
				(aspecto_txt == "mercurio cuadratura pluton.txt") ||
				(aspecto_txt == "mercurio semicuadratura pluton.txt") ||
				(aspecto_txt == "mercurio quintil pluton.txt") ||
				(aspecto_txt == "mercurio quincuncio pluton.txt") ||
				(aspecto_txt == "mercurio sextil pluton.txt") ||
				(aspecto_txt == "mercurio conjuncion lilith.txt") ||
				(aspecto_txt == "mercurio oposicion lilith.txt") ||
				(aspecto_txt == "mercurio trigono lilith.txt") ||
				(aspecto_txt == "mercurio cuadratura lilith.txt") ||
				(aspecto_txt == "mercurio semicuadratura lilith.txt") ||
				(aspecto_txt == "mercurio quintil lilith.txt") ||
				(aspecto_txt == "mercurio quincuncio lilith.txt") ||
				(aspecto_txt == "mercurio sextil lilith.txt") ||
				(aspecto_txt == "mercurio conjuncion quiron.txt") ||
				(aspecto_txt == "mercurio oposicion quiron.txt") ||
				(aspecto_txt == "mercurio trigono quiron.txt") ||
				(aspecto_txt == "mercurio cuadratura quiron.txt") ||
				(aspecto_txt == "mercurio semicuadratura quiron.txt") ||
				(aspecto_txt == "mercurio quintil quiron.txt") ||
				(aspecto_txt == "mercurio quincuncio quiron.txt") ||
				(aspecto_txt == "mercurio sextil quiron.txt") ||
				(aspecto_txt == "mercurio conjuncion ceres.txt") ||
				(aspecto_txt == "mercurio oposicion ceres.txt") ||
				(aspecto_txt == "mercurio trigono ceres.txt") ||
				(aspecto_txt == "mercurio cuadratura ceres.txt") ||
				(aspecto_txt == "mercurio semicuadratura ceres.txt") ||
				(aspecto_txt == "mercurio quintil ceres.txt") ||
				(aspecto_txt == "mercurio quincuncio ceres.txt") ||
				(aspecto_txt == "mercurio sextil ceres.txt") ||
				(aspecto_txt == "mercurio conjuncion palas.txt") ||
				(aspecto_txt == "mercurio oposicion palas.txt") ||
				(aspecto_txt == "mercurio trigono palas.txt") ||
				(aspecto_txt == "mercurio cuadratura palas.txt") ||
				(aspecto_txt == "mercurio semicuadratura palas.txt") ||
				(aspecto_txt == "mercurio quintil palas.txt") ||
				(aspecto_txt == "mercurio quincuncio palas.txt") ||
				(aspecto_txt == "mercurio sextil palas.txt") ||
				(aspecto_txt == "mercurio conjuncion juno.txt") ||
				(aspecto_txt == "mercurio oposicion juno.txt") ||
				(aspecto_txt == "mercurio trigono juno.txt") ||
				(aspecto_txt == "mercurio cuadratura juno.txt") ||
				(aspecto_txt == "mercurio semicuadratura juno.txt") ||
				(aspecto_txt == "mercurio quintil juno.txt") ||
				(aspecto_txt == "mercurio quincuncio juno.txt") ||
				(aspecto_txt == "mercurio sextil juno.txt") ||
				(aspecto_txt == "mercurio conjuncion vesta.txt") ||
				(aspecto_txt == "mercurio oposicion vesta.txt") ||
				(aspecto_txt == "mercurio trigono vesta.txt") ||
				(aspecto_txt == "mercurio cuadratura vesta.txt") ||
				(aspecto_txt == "mercurio semicuadratura vesta.txt") ||
				(aspecto_txt == "mercurio quintil vesta.txt") ||
				(aspecto_txt == "mercurio quincuncio vesta.txt") ||
				(aspecto_txt == "mercurio sextil vesta.txt") ||
				(aspecto_txt == "venus conjuncion marte.txt") ||
				(aspecto_txt == "venus oposicion marte.txt") ||
				(aspecto_txt == "venus trigono marte.txt") ||
				(aspecto_txt == "venus cuadratura marte.txt") ||
				(aspecto_txt == "venus semicuadratura marte.txt") ||
				(aspecto_txt == "venus quintil marte.txt") ||
				(aspecto_txt == "venus quincuncio marte.txt") ||
				(aspecto_txt == "venus sextil marte.txt") ||
				(aspecto_txt == "venus conjuncion jupiter.txt") ||
				(aspecto_txt == "venus oposicion jupiter.txt") ||
				(aspecto_txt == "venus trigono jupiter.txt") ||
				(aspecto_txt == "venus cuadratura jupiter.txt") ||
				(aspecto_txt == "venus semicuadratura jupiter.txt") ||
				(aspecto_txt == "venus quintil jupiter.txt") ||
				(aspecto_txt == "venus quincuncio jupiter.txt") ||
				(aspecto_txt == "venus sextil jupiter.txt") ||
				(aspecto_txt == "venus conjuncion saturno.txt") ||
				(aspecto_txt == "venus oposicion saturno.txt") ||
				(aspecto_txt == "venus trigono saturno.txt") ||
				(aspecto_txt == "venus cuadratura saturno.txt") ||
				(aspecto_txt == "venus semicuadratura saturno.txt") ||
				(aspecto_txt == "venus quintil saturno.txt") ||
				(aspecto_txt == "venus quincuncio saturno.txt") ||
				(aspecto_txt == "venus sextil saturno.txt") ||
				(aspecto_txt == "venus conjuncion urano.txt") ||
				(aspecto_txt == "venus oposicion urano.txt") ||
				(aspecto_txt == "venus trigono urano.txt") ||
				(aspecto_txt == "venus cuadratura urano.txt") ||
				(aspecto_txt == "venus semicuadratura urano.txt") ||
				(aspecto_txt == "venus quintil urano.txt") ||
				(aspecto_txt == "venus quincuncio urano.txt") ||
				(aspecto_txt == "venus sextil urano.txt") ||
				(aspecto_txt == "venus conjuncion neptuno.txt") ||
				(aspecto_txt == "venus oposicion neptuno.txt") ||
				(aspecto_txt == "venus trigono neptuno.txt") ||
				(aspecto_txt == "venus cuadratura neptuno.txt") ||
				(aspecto_txt == "venus semicuadratura neptuno.txt") ||
				(aspecto_txt == "venus quintil neptuno.txt") ||
				(aspecto_txt == "venus quincuncio neptuno.txt") ||
				(aspecto_txt == "venus sextil neptuno.txt") ||
				(aspecto_txt == "venus conjuncion pluton.txt") ||
				(aspecto_txt == "venus oposicion pluton.txt") ||
				(aspecto_txt == "venus trigono pluton.txt") ||
				(aspecto_txt == "venus cuadratura pluton.txt") ||
				(aspecto_txt == "venus semicuadratura pluton.txt") ||
				(aspecto_txt == "venus quintil pluton.txt") ||
				(aspecto_txt == "venus quincuncio pluton.txt") ||
				(aspecto_txt == "venus sextil pluton.txt") ||
				(aspecto_txt == "venus conjuncion lilith.txt") ||
				(aspecto_txt == "venus oposicion lilith.txt") ||
				(aspecto_txt == "venus trigono lilith.txt") ||
				(aspecto_txt == "venus cuadratura lilith.txt") ||
				(aspecto_txt == "venus semicuadratura lilith.txt") ||
				(aspecto_txt == "venus quintil lilith.txt") ||
				(aspecto_txt == "venus quincuncio lilith.txt") ||
				(aspecto_txt == "venus sextil lilith.txt") ||
				(aspecto_txt == "venus conjuncion quiron.txt") ||
				(aspecto_txt == "venus oposicion quiron.txt") ||
				(aspecto_txt == "venus trigono quiron.txt") ||
				(aspecto_txt == "venus cuadratura quiron.txt") ||
				(aspecto_txt == "venus semicuadratura quiron.txt") ||
				(aspecto_txt == "venus quintil quiron.txt") ||
				(aspecto_txt == "venus quincuncio quiron.txt") ||
				(aspecto_txt == "venus sextil quiron.txt") ||
				(aspecto_txt == "venus conjuncion ceres.txt") ||
				(aspecto_txt == "venus oposicion ceres.txt") ||
				(aspecto_txt == "venus trigono ceres.txt") ||
				(aspecto_txt == "venus cuadratura ceres.txt") ||
				(aspecto_txt == "venus semicuadratura ceres.txt") ||
				(aspecto_txt == "venus quintil ceres.txt") ||
				(aspecto_txt == "venus quincuncio ceres.txt") ||
				(aspecto_txt == "venus sextil ceres.txt") ||
				(aspecto_txt == "venus conjuncion palas.txt") ||
				(aspecto_txt == "venus oposicion palas.txt") ||
				(aspecto_txt == "venus trigono palas.txt") ||
				(aspecto_txt == "venus cuadratura palas.txt") ||
				(aspecto_txt == "venus semicuadratura palas.txt") ||
				(aspecto_txt == "venus quintil palas.txt") ||
				(aspecto_txt == "venus quincuncio palas.txt") ||
				(aspecto_txt == "venus sextil palas.txt") ||
				(aspecto_txt == "venus conjuncion juno.txt") ||
				(aspecto_txt == "venus oposicion juno.txt") ||
				(aspecto_txt == "venus trigono juno.txt") ||
				(aspecto_txt == "venus cuadratura juno.txt") ||
				(aspecto_txt == "venus semicuadratura juno.txt") ||
				(aspecto_txt == "venus quintil juno.txt") ||
				(aspecto_txt == "venus quincuncio juno.txt") ||
				(aspecto_txt == "venus sextil juno.txt") ||
				(aspecto_txt == "venus conjuncion vesta.txt") ||
				(aspecto_txt == "venus oposicion vesta.txt") ||
				(aspecto_txt == "venus trigono vesta.txt") ||
				(aspecto_txt == "venus cuadratura vesta.txt") ||
				(aspecto_txt == "venus semicuadratura vesta.txt") ||
				(aspecto_txt == "venus quintil vesta.txt") ||
				(aspecto_txt == "venus quincuncio vesta.txt") ||
				(aspecto_txt == "venus sextil vesta.txt") ||
				(aspecto_txt == "marte conjuncion jupiter.txt") ||
				(aspecto_txt == "marte oposicion jupiter.txt") ||
				(aspecto_txt == "marte trigono jupiter.txt") ||
				(aspecto_txt == "marte cuadratura jupiter.txt") ||
				(aspecto_txt == "marte semicuadratura jupiter.txt") ||
				(aspecto_txt == "marte quintil jupiter.txt") ||
				(aspecto_txt == "marte quincuncio jupiter.txt") ||
				(aspecto_txt == "marte sextil jupiter.txt") ||
				(aspecto_txt == "marte conjuncion saturno.txt") ||
				(aspecto_txt == "marte oposicion saturno.txt") ||
				(aspecto_txt == "marte trigono saturno.txt") ||
				(aspecto_txt == "marte cuadratura saturno.txt") ||
				(aspecto_txt == "marte semicuadratura saturno.txt") ||
				(aspecto_txt == "marte quintil saturno.txt") ||
				(aspecto_txt == "marte quincuncio saturno.txt") ||
				(aspecto_txt == "marte sextil saturno.txt") ||
				(aspecto_txt == "marte conjuncion urano.txt") ||
				(aspecto_txt == "marte oposicion urano.txt") ||
				(aspecto_txt == "marte trigono urano.txt") ||
				(aspecto_txt == "marte cuadratura urano.txt") ||
				(aspecto_txt == "marte semicuadratura urano.txt") ||
				(aspecto_txt == "marte quintil urano.txt") ||
				(aspecto_txt == "marte quincuncio urano.txt") ||
				(aspecto_txt == "marte sextil urano.txt") ||
				(aspecto_txt == "marte conjuncion neptuno.txt") ||
				(aspecto_txt == "marte oposicion neptuno.txt") ||
				(aspecto_txt == "marte trigono neptuno.txt") ||
				(aspecto_txt == "marte cuadratura neptuno.txt") ||
				(aspecto_txt == "marte semicuadratura neptuno.txt") ||
				(aspecto_txt == "marte quintil neptuno.txt") ||
				(aspecto_txt == "marte quincuncio neptuno.txt") ||
				(aspecto_txt == "marte sextil neptuno.txt") ||
				(aspecto_txt == "marte conjuncion pluton.txt") ||
				(aspecto_txt == "marte oposicion pluton.txt") ||
				(aspecto_txt == "marte trigono pluton.txt") ||
				(aspecto_txt == "marte cuadratura pluton.txt") ||
				(aspecto_txt == "marte semicuadratura pluton.txt") ||
				(aspecto_txt == "marte quintil pluton.txt") ||
				(aspecto_txt == "marte quincuncio pluton.txt") ||
				(aspecto_txt == "marte sextil pluton.txt") ||
				(aspecto_txt == "marte conjuncion lilith.txt") ||
				(aspecto_txt == "marte oposicion lilith.txt") ||
				(aspecto_txt == "marte trigono lilith.txt") ||
				(aspecto_txt == "marte cuadratura lilith.txt") ||
				(aspecto_txt == "marte semicuadratura lilith.txt") ||
				(aspecto_txt == "marte quintil lilith.txt") ||
				(aspecto_txt == "marte quincuncio lilith.txt") ||
				(aspecto_txt == "marte sextil lilith.txt") ||
				(aspecto_txt == "marte conjuncion quiron.txt") ||
				(aspecto_txt == "marte oposicion quiron.txt") ||
				(aspecto_txt == "marte trigono quiron.txt") ||
				(aspecto_txt == "marte cuadratura quiron.txt") ||
				(aspecto_txt == "marte semicuadratura quiron.txt") ||
				(aspecto_txt == "marte quintil quiron.txt") ||
				(aspecto_txt == "marte quincuncio quiron.txt") ||
				(aspecto_txt == "marte sextil quiron.txt") ||
				(aspecto_txt == "marte conjuncion ceres.txt") ||
				(aspecto_txt == "marte oposicion ceres.txt") ||
				(aspecto_txt == "marte trigono ceres.txt") ||
				(aspecto_txt == "marte cuadratura ceres.txt") ||
				(aspecto_txt == "marte semicuadratura ceres.txt") ||
				(aspecto_txt == "marte quintil ceres.txt") ||
				(aspecto_txt == "marte quincuncio ceres.txt") ||
				(aspecto_txt == "marte sextil ceres.txt") ||
				(aspecto_txt == "marte conjuncion palas.txt") ||
				(aspecto_txt == "marte oposicion palas.txt") ||
				(aspecto_txt == "marte trigono palas.txt") ||
				(aspecto_txt == "marte cuadratura palas.txt") ||
				(aspecto_txt == "marte semicuadratura palas.txt") ||
				(aspecto_txt == "marte quintil palas.txt") ||
				(aspecto_txt == "marte quincuncio palas.txt") ||
				(aspecto_txt == "marte sextil palas.txt") ||
				(aspecto_txt == "marte conjuncion juno.txt") ||
				(aspecto_txt == "marte oposicion juno.txt") ||
				(aspecto_txt == "marte trigono juno.txt") ||
				(aspecto_txt == "marte cuadratura juno.txt") ||
				(aspecto_txt == "marte semicuadratura juno.txt") ||
				(aspecto_txt == "marte quintil juno.txt") ||
				(aspecto_txt == "marte quincuncio juno.txt") ||
				(aspecto_txt == "marte sextil juno.txt") ||
				(aspecto_txt == "marte conjuncion vesta.txt") ||
				(aspecto_txt == "marte oposicion vesta.txt") ||
				(aspecto_txt == "marte trigono vesta.txt") ||
				(aspecto_txt == "marte cuadratura vesta.txt") ||
				(aspecto_txt == "marte semicuadratura vesta.txt") ||
				(aspecto_txt == "marte quintil vesta.txt") ||
				(aspecto_txt == "marte quincuncio vesta.txt") ||
				(aspecto_txt == "marte sextil vesta.txt") ||
				(aspecto_txt == "jupiter conjuncion saturno.txt") ||
				(aspecto_txt == "jupiter oposicion saturno.txt") ||
				(aspecto_txt == "jupiter trigono saturno.txt") ||
				(aspecto_txt == "jupiter cuadratura saturno.txt") ||
				(aspecto_txt == "jupiter semicuadratura saturno.txt") ||
				(aspecto_txt == "jupiter quintil saturno.txt") ||
				(aspecto_txt == "jupiter quincuncio saturno.txt") ||
				(aspecto_txt == "jupiter sextil saturno.txt") ||
				(aspecto_txt == "jupiter conjuncion urano.txt") ||
				(aspecto_txt == "jupiter oposicion urano.txt") ||
				(aspecto_txt == "jupiter trigono urano.txt") ||
				(aspecto_txt == "jupiter cuadratura urano.txt") ||
				(aspecto_txt == "jupiter semicuadratura urano.txt") ||
				(aspecto_txt == "jupiter quintil urano.txt") ||
				(aspecto_txt == "jupiter quincuncio urano.txt") ||
				(aspecto_txt == "jupiter sextil urano.txt") ||
				(aspecto_txt == "jupiter conjuncion neptuno.txt") ||
				(aspecto_txt == "jupiter oposicion neptuno.txt") ||
				(aspecto_txt == "jupiter trigono neptuno.txt") ||
				(aspecto_txt == "jupiter cuadratura neptuno.txt") ||
				(aspecto_txt == "jupiter semicuadratura neptuno.txt") ||
				(aspecto_txt == "jupiter quintil neptuno.txt") ||
				(aspecto_txt == "jupiter quincuncio neptuno.txt") ||
				(aspecto_txt == "jupiter sextil neptuno.txt") ||
				(aspecto_txt == "jupiter conjuncion pluton.txt") ||
				(aspecto_txt == "jupiter oposicion pluton.txt") ||
				(aspecto_txt == "jupiter trigono pluton.txt") ||
				(aspecto_txt == "jupiter cuadratura pluton.txt") ||
				(aspecto_txt == "jupiter semicuadratura pluton.txt") ||
				(aspecto_txt == "jupiter quintil pluton.txt") ||
				(aspecto_txt == "jupiter quincuncio pluton.txt") ||
				(aspecto_txt == "jupiter sextil pluton.txt") ||
				(aspecto_txt == "jupiter conjuncion lilith.txt") ||
				(aspecto_txt == "jupiter oposicion lilith.txt") ||
				(aspecto_txt == "jupiter trigono lilith.txt") ||
				(aspecto_txt == "jupiter cuadratura lilith.txt") ||
				(aspecto_txt == "jupiter semicuadratura lilith.txt") ||
				(aspecto_txt == "jupiter quintil lilith.txt") ||
				(aspecto_txt == "jupiter quincuncio lilith.txt") ||
				(aspecto_txt == "jupiter sextil lilith.txt") ||
				(aspecto_txt == "jupiter conjuncion quiron.txt") ||
				(aspecto_txt == "jupiter oposicion quiron.txt") ||
				(aspecto_txt == "jupiter trigono quiron.txt") ||
				(aspecto_txt == "jupiter cuadratura quiron.txt") ||
				(aspecto_txt == "jupiter semicuadratura quiron.txt") ||
				(aspecto_txt == "jupiter quintil quiron.txt") ||
				(aspecto_txt == "jupiter quincuncio quiron.txt") ||
				(aspecto_txt == "jupiter sextil quiron.txt") ||
				(aspecto_txt == "jupiter conjuncion ceres.txt") ||
				(aspecto_txt == "jupiter oposicion ceres.txt") ||
				(aspecto_txt == "jupiter trigono ceres.txt") ||
				(aspecto_txt == "jupiter cuadratura ceres.txt") ||
				(aspecto_txt == "jupiter semicuadratura ceres.txt") ||
				(aspecto_txt == "jupiter quintil ceres.txt") ||
				(aspecto_txt == "jupiter quincuncio ceres.txt") ||
				(aspecto_txt == "jupiter sextil ceres.txt") ||
				(aspecto_txt == "jupiter conjuncion palas.txt") ||
				(aspecto_txt == "jupiter oposicion palas.txt") ||
				(aspecto_txt == "jupiter trigono palas.txt") ||
				(aspecto_txt == "jupiter cuadratura palas.txt") ||
				(aspecto_txt == "jupiter semicuadratura palas.txt") ||
				(aspecto_txt == "jupiter quintil palas.txt") ||
				(aspecto_txt == "jupiter quincuncio palas.txt") ||
				(aspecto_txt == "jupiter sextil palas.txt") ||
				(aspecto_txt == "jupiter conjuncion juno.txt") ||
				(aspecto_txt == "jupiter oposicion juno.txt") ||
				(aspecto_txt == "jupiter trigono juno.txt") ||
				(aspecto_txt == "jupiter cuadratura juno.txt") ||
				(aspecto_txt == "jupiter semicuadratura juno.txt") ||
				(aspecto_txt == "jupiter quintil juno.txt") ||
				(aspecto_txt == "jupiter quincuncio juno.txt") ||
				(aspecto_txt == "jupiter sextil juno.txt") ||
				(aspecto_txt == "jupiter conjuncion vesta.txt") ||
				(aspecto_txt == "jupiter oposicion vesta.txt") ||
				(aspecto_txt == "jupiter trigono vesta.txt") ||
				(aspecto_txt == "jupiter cuadratura vesta.txt") ||
				(aspecto_txt == "jupiter semicuadratura vesta.txt") ||
				(aspecto_txt == "jupiter quintil vesta.txt") ||
				(aspecto_txt == "jupiter quincuncio vesta.txt") ||
				(aspecto_txt == "jupiter sextil vesta.txt") ||
				(aspecto_txt == "saturno conjuncion urano.txt") ||
				(aspecto_txt == "saturno oposicion urano.txt") ||
				(aspecto_txt == "saturno trigono urano.txt") ||
				(aspecto_txt == "saturno cuadratura urano.txt") ||
				(aspecto_txt == "saturno semicuadratura urano.txt") ||
				(aspecto_txt == "saturno quintil urano.txt") ||
				(aspecto_txt == "saturno quincuncio urano.txt") ||
				(aspecto_txt == "saturno sextil urano.txt") ||
				(aspecto_txt == "saturno conjuncion neptuno.txt") ||
				(aspecto_txt == "saturno oposicion neptuno.txt") ||
				(aspecto_txt == "saturno trigono neptuno.txt") ||
				(aspecto_txt == "saturno cuadratura neptuno.txt") ||
				(aspecto_txt == "saturno semicuadratura neptuno.txt") ||
				(aspecto_txt == "saturno quintil neptuno.txt") ||
				(aspecto_txt == "saturno quincuncio neptuno.txt") ||
				(aspecto_txt == "saturno sextil neptuno.txt") ||
				(aspecto_txt == "saturno conjuncion pluton.txt") ||
				(aspecto_txt == "saturno oposicion pluton.txt") ||
				(aspecto_txt == "saturno trigono pluton.txt") ||
				(aspecto_txt == "saturno cuadratura pluton.txt") ||
				(aspecto_txt == "saturno semicuadratura pluton.txt") ||
				(aspecto_txt == "saturno quintil pluton.txt") ||
				(aspecto_txt == "saturno quincuncio pluton.txt") ||
				(aspecto_txt == "saturno sextil pluton.txt") ||
				(aspecto_txt == "saturno conjuncion lilith.txt") ||
				(aspecto_txt == "saturno oposicion lilith.txt") ||
				(aspecto_txt == "saturno trigono lilith.txt") ||
				(aspecto_txt == "saturno cuadratura lilith.txt") ||
				(aspecto_txt == "saturno semicuadratura lilith.txt") ||
				(aspecto_txt == "saturno quintil lilith.txt") ||
				(aspecto_txt == "saturno quincuncio lilith.txt") ||
				(aspecto_txt == "saturno sextil lilith.txt") ||
				(aspecto_txt == "saturno conjuncion quiron.txt") ||
				(aspecto_txt == "saturno oposicion quiron.txt") ||
				(aspecto_txt == "saturno trigono quiron.txt") ||
				(aspecto_txt == "saturno cuadratura quiron.txt") ||
				(aspecto_txt == "saturno semicuadratura quiron.txt") ||
				(aspecto_txt == "saturno quintil quiron.txt") ||
				(aspecto_txt == "saturno quincuncio quiron.txt") ||
				(aspecto_txt == "saturno sextil quiron.txt") ||
				(aspecto_txt == "saturno conjuncion ceres.txt") ||
				(aspecto_txt == "saturno oposicion ceres.txt") ||
				(aspecto_txt == "saturno trigono ceres.txt") ||
				(aspecto_txt == "saturno cuadratura ceres.txt") ||
				(aspecto_txt == "saturno emicuadratura ceres.txt") ||
				(aspecto_txt == "saturno quintil ceres.txt") ||
				(aspecto_txt == "saturno quincuncio ceres.txt") ||
				(aspecto_txt == "saturno sextil ceres.txt") ||
				(aspecto_txt == "saturno conjuncion palas.txt") ||
				(aspecto_txt == "saturno oposicion palas.txt") ||
				(aspecto_txt == "saturno trigono palas.txt") ||
				(aspecto_txt == "saturno cuadratura palas.txt") ||
				(aspecto_txt == "saturno semicuadratura palas.txt") ||
				(aspecto_txt == "saturno quintil palas.txt") ||
				(aspecto_txt == "saturno quincuncio palas.txt") ||
				(aspecto_txt == "saturno sextil palas.txt") ||
				(aspecto_txt == "saturno con juncion juno.txt") ||
				(aspecto_txt == "saturno oposicion juno.txt") ||
				(aspecto_txt == "saturno trigono juno.txt") ||
				(aspecto_txt == "saturno cuadratura juno.txt") ||
				(aspecto_txt == "saturno semicuadratura juno.txt") ||
				(aspecto_txt == "saturno quintil juno.txt") ||
				(aspecto_txt == "saturno quincuncio juno.txt") ||
				(aspecto_txt == "saturno sextil juno.txt") ||
				(aspecto_txt == "saturno conjuncion vesta.txt") ||
				(aspecto_txt == "saturno oposicion vesta.txt") ||
				(aspecto_txt == "saturno trigono vesta.txt") ||
				(aspecto_txt == "saturno cuadratura vesta.txt") ||
				(aspecto_txt == "saturno semicuadratura vesta.txt") ||
				(aspecto_txt == "saturno quintil vesta.txt") ||
				(aspecto_txt == "saturno quincuncio vesta.txt") ||
				(aspecto_txt == "saturno retrogrado.txt") ||
				(aspecto_txt == "jupiter retrogrado.txt") ||
				(aspecto_txt == "marte retrogrado.txt") ||
				(aspecto_txt == "urano retrogrado.txt") ||
				(aspecto_txt == "neptuno retogrado.txt") ||
				(aspecto_txt == "pluton retrogrado.txt") ||
				(aspecto_txt == "urano conjuncion quiron.txt") ||
				(aspecto_txt == "neptuno conjuncion quiron.txt") ||
				(aspecto_txt == "pluton conjuncion quiron.txt") ||
				(aspecto_txt == "quiron conjuncion ascendente.txt") ||
				(aspecto_txt == "quiron conjuncion medio cielo.txt") ||
				(aspecto_txt == "nodo norte conjuncion medio cielo.txt") ||
				(aspecto_txt == "nodo norte cuadratura medio cielo.txt") ||
				(aspecto_txt == "nodo norte trigono medio cielo.txt") ||
				(aspecto_txt == "nodo norte oposicion medio cielo.txt") ||
				(aspecto_txt == "nodo norte conjuncion ascendente.txt") ||
				(aspecto_txt == "nodo norte cuadratura ascendente.txt") ||
				(aspecto_txt == "nodo norte trigono ascendente.txt") ||
				(aspecto_txt == "nodo norte oposicion ascendente.txt") ||
				(aspecto_txt == "sol conjuncion nodo norte.txt") ||
				(aspecto_txt == "sol cuadratura nodo norte.txt") ||
				(aspecto_txt == "sol trigono nodo norte.txt") ||
				(aspecto_txt == "sol oposicion nodo norte.txt") ||
				(aspecto_txt == "luna conjuncion nodo norte.txt") ||
				(aspecto_txt == "luna cuadratura nodo norte.txt") ||
				(aspecto_txt == "luna trigono nodo norte.txt") ||
				(aspecto_txt == "luna oposicion nodo norte.txt") ||
				(aspecto_txt == "mercurio conjuncion nodo norte.txt") ||
				(aspecto_txt == "mercurio cuadratura nodo norte.txt") ||
				(aspecto_txt == "mercurio trigono nodo norte.txt") ||
				(aspecto_txt == "mercurio oposicion nodo norte.txt") ||
				(aspecto_txt == "venus conjuncion nodo norte.txt") ||
				(aspecto_txt == "venus cuadratura nodo norte.txt") ||
				(aspecto_txt == "venus trigono nodo norte.txt") ||
				(aspecto_txt == "venus oposicion nodo norte.txt") ||
				(aspecto_txt == "marte conjuncion nodo norte.txt") ||
				(aspecto_txt == "marte cuadratura nodo norte.txt") ||
				(aspecto_txt == "marte trigono nodo norte.txt") ||
				(aspecto_txt == "marte oposicion nodo norte.txt") ||
				(aspecto_txt == "jupiter conjuncion nodo norte.txt") ||
				(aspecto_txt == "jupiter trigono nodo norte.txt") ||
				(aspecto_txt == "jupiter oposicion nodo norte.txt") ||
				(aspecto_txt == "saturno conjuncion nodo norte.txt") ||
				(aspecto_txt == "saturno cuadratura nodo norte.txt") ||
				(aspecto_txt == "saturno trigono nodo norte.txt") ||
				(aspecto_txt == "saturno oposicion nodo norte.txt") ||
				(aspecto_txt == "urano conjuncion nodo norte.txt") ||
				(aspecto_txt == "urano cuadratura nodo norte.txt") ||
				(aspecto_txt == "urano trigono nodo norte.txt") ||
				(aspecto_txt == "urano oposicion nodo norte.txt") ||
				(aspecto_txt == "neptuno conjuncion nodo norte.txt") ||
				(aspecto_txt == "neptuno cuadratura nodo norte.txt") ||
				(aspecto_txt == "neptuno trigono nodo norte.txt") ||
				(aspecto_txt == "neptuno oposicion nodo norte.txt") ||
				(aspecto_txt == "pluton conjuncion nodo norte.txt") ||
				(aspecto_txt == "pluton cuadratura nodo norte.txt") ||
				(aspecto_txt == "pluton trigono nodo norte.txt") ||
				(aspecto_txt == "pluton oposicion al nodo norte.txt") ||
				(aspecto_txt == "urano conjuncion neptuno.txt") ||
				(aspecto_txt == "urano trigono pluton.txt") ||
				(aspecto_txt == "urano cuadratura pluton.txt") ||
				(aspecto_txt == "neptuno trigono pluton.txt") ||
				(aspecto_txt == "neptuno cuadratura pluton.txt") ||
				(aspecto_txt == "urano trigono neptuno.txt") ||
				(aspecto_txt == "urano cuadratura neptuno.txt") ||
				(aspecto_txt == "urano conjuncion pluton.txt") ||
				(aspecto_txt == "neptuno conjuncion pluton.txt") ||
				(aspecto_txt == "jupiter ascendente transito.txt") ||
				(aspecto_txt == "jupiter medio cielo transito.txt") ||
				(aspecto_txt == "saturno ascendente transito.txt") ||
				(aspecto_txt == "saturno medio cielo transito.txt") ||
				(aspecto_txt == "saturno pluton transito.txt") ||
				(aspecto_txt == "saturno urano transito.txt") ||
				(aspecto_txt == "saturno neptuno transito.txt") ||
				(aspecto_txt == "jupiter urano transito.txt") ||
				(aspecto_txt == "jupiter neptuno transito.txt") ||
				(aspecto_txt == "jupiter pluton transito.txt") ||
				(aspecto_txt == "jupiter saturno transito.txt") ||
				(aspecto_txt == "saturno sextil vesta.txt")){cout << "\nse ha agregado correctamente al archivo,\n\n\n escriba otro aspecto o presione 0 para salir\n\n"; texto = texto + "" + aspectosdatos; texto=texto+""+salto; aspectosdatos=""; aspectos.close(); }
			else { cout << "esta opcion no es valida, por favor escriba de nuevo\n\n";}
		}while (aspecto!="");	
			aspectos.close();
		
		
	}


































void basicos(){
ifstream basico;



basico.open("informe_predictivo.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico,informe_predictivo);} 
basico.close();
basico.open("sol_ensigno.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, sol_ensigno);} 
basico.close();
basico.open("sol_encasa.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico,sol_encasa); }
basico.close();
basico.open("ascendente.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, ascendente); }
basico.close();
basico.open("luna_ensigno.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, luna_ensigno); }
basico.close();
basico.open("luna_encasa.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, luna_encasa); }
basico.close();
basico.open("medio_cielo.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico,medio_cielo    ); }
basico.close();
basico.open("nodo_norteensigno.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico,nodo_norteensigno); }
basico.close();
basico.open("nodo_norteencasa.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico,nodo_norteencasa); }
basico.close();
basico.open("nodo_surensigno.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico,nodo_surensigno); }
basico.close();
basico.open("nodo_surencasa.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico,nodo_surencasa); }
basico.close();
basico.open("mercurio_ensigno.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico,mercurio_ensigno);} 
basico.close();
basico.open("nakshatra.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico,nakshatra); }
basico.close();
basico.open("mercurio_encasa.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico,mercurio_encasa);} 
basico.close();
basico.open("venus_ensigno.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico,venus_ensigno); }
basico.close();
basico.open("venus_encasa.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico,venus_encasa); }
basico.close();
basico.open("marte_ensigno.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico,marte_ensigno); }
basico.close();
basico.open("marte_encasa.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico,marte_encasa); }
basico.close();
basico.open("jupiter_ensigno.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico,jupiter_ensigno); }
basico.close();
basico.open("jupiter_encasa.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico,jupiter_encasa); }
basico.close();
basico.open("saturno_ensigno.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico,saturno_ensigno); }
basico.close();
basico.open("saturno_encasa.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico,saturno_encasa); }
basico.close();
basico.open("urano_ensigno.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, urano_ensigno); }
basico.close();
basico.open("urano_encasa.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, urano_encasa); }
basico.close();
basico.open("neptuno_ensigno.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico,neptuno_ensigno); }
basico.close();
basico.open("neptuno_encasa.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, neptuno_encasa); }
basico.close();
basico.open("pluton_ensigno.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, pluton_ensigno); }
basico.close();
basico.open("pluton_encasa.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, pluton_encasa); }
basico.close();
basico.open("lilith_ensigno.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, lilith_ensigno); }
basico.close();
basico.open("lilith_encasa.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, lilith_encasa); }
basico.close();
basico.open("quiron_ensigno.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, quiron_ensigno); }
basico.close();
basico.open("quiron_encasa.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, quiron_encasa); }
basico.close();
basico.open("ceres_ensigno.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, ceres_ensigno); }
basico.close();
basico.open("ceres_encasa.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, ceres_encasa); }
basico.close();
basico.open("palas_ensigno.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, palas_ensigno); }
basico.close();
basico.open("palas_encasa.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, palas_encasa); }
basico.close();
basico.open("juno_ensigno.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, juno_ensigno); }
basico.close();
basico.open("juno_encasa.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, juno_encasa); }
basico.close();
basico.open("vesta_ensigno.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, vesta_ensigno); }
basico.close();
basico.open("vesta_encasa.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, vesta_encasa); }
basico.close();
basico.open("sol_aspectos.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, sol_aspectos); }
basico.close();
basico.open("luna_aspectos.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, luna_aspectos); }
basico.close();
basico.open("mercurio_aspectos.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, mercurio_aspectos);} 
basico.close();
basico.open("venus_aspectos.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, venus_aspectos); }
basico.close();
basico.open("marte_aspectos.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, marte_aspectos); }
basico.close();
basico.open("jupiter_aspectos.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, jupiter_aspectos); }
basico.close();
basico.open("saturno_aspectos.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, saturno_aspectos);} 
basico.close();
basico.open("urano_aspectos.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, urano_aspectos); }
basico.close();
basico.open("neptuno_aspectos.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, neptuno_aspectos); }
basico.close();
basico.open("pluton_aspectos.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, pluton_aspectos);} 
basico.close();
basico.open("fuentes.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, fuentes);} 
basico.close();
basico.open("parte_delafortuna.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, parte_delafortuna);} 
basico.close();
basico.open("parte_delinfortunio.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, parte_delinfortunio);} 
basico.close();
basico.open("hemisferios.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, hemisferios);} 
basico.close();
basico.open("mercurio retrogrado transito.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, mercurio_retrogradotransito);} 
basico.close();
basico.open("introduccion.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, introduccion);} 
basico.close();
basico.open("indice.txt", ios::in); if (basico.fail()) { cout << "no se encuentra el archivo"; exit(1); }
else { while (!basico.eof())getline(basico, indice);} 
basico.close();
}
